
.version 3.1
.target sm_20
.address_size 64

.extern .func  (.param .b32 func_retval0) add
(
	.param .b32 add_param_0,
	.param .b32 add_param_1
)
;

.visible .entry vadd(
	.param .u64 vadd_param_0,
	.param .u64 vadd_param_1,
	.param .u64 vadd_param_2
)
{
	.reg .s32 	%r<8>;
	.reg .f32 	%f<4>;
	.reg .s64 	%rd<11>;


	ld.param.u64 	%rd1, [vadd_param_0];
	ld.param.u64 	%rd2, [vadd_param_1];
	ld.param.u64 	%rd3, [vadd_param_2];
	cvta.to.global.u64 	%rd4, %rd3;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r1, %r2, %r3;
	cvta.to.global.u64 	%rd5, %rd1;
	mul.wide.s32 	%rd6, %r4, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd2;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd7];
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.f32	[param0+0], %f2;
	.param .b32 param1;
	st.param.f32	[param1+0], %f1;
	.param .b32 retval0;
	call.uni (retval0), 
	add, 
	(
	param0, 
	param1
	);
	ld.param.f32	%f3, [retval0+0];
	}
	// Callseq End 0
	add.s64 	%rd10, %rd4, %rd6;
	st.global.f32 	[%rd10], %f3;
	ret;
}


