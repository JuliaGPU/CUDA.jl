# This file is automatically generated. Do not edit!
# To re-generate, execute res/wrap/wrap.jl

using CEnum

# cuDNN uses CUDA runtime objects, which are compatible with our driver usage
const cudaStream_t = CUstream

# outlined functionality to avoid GC frame allocation
@noinline function throw_api_error(res)
    if res == CUDNN_STATUS_ALLOC_FAILED
        throw(OutOfGPUMemoryError())
    else
        throw(CUDNNError(res))
    end
end

@inline function check(f)
    function retry_if(res)
        return res in (CUDNN_STATUS_NOT_INITIALIZED,
                       CUDNN_STATUS_ALLOC_FAILED,
                       CUDNN_STATUS_INTERNAL_ERROR)
    end
    res = retry_reclaim(f, retry_if)

    if res != CUDNN_STATUS_SUCCESS
        throw_api_error(res)
    end
end

@cenum cudnnStatus_t::UInt32 begin
    CUDNN_STATUS_SUCCESS = 0
    CUDNN_STATUS_NOT_INITIALIZED = 1001
    CUDNN_STATUS_SUBLIBRARY_VERSION_MISMATCH = 1002
    CUDNN_STATUS_SERIALIZATION_VERSION_MISMATCH = 1003
    CUDNN_STATUS_DEPRECATED = 1004
    CUDNN_STATUS_LICENSE_ERROR = 1005
    CUDNN_STATUS_RUNTIME_IN_PROGRESS = 1006
    CUDNN_STATUS_RUNTIME_FP_OVERFLOW = 1007
    CUDNN_STATUS_SUBLIBRARY_LOADING_FAILED = 1008
    CUDNN_STATUS_BAD_PARAM = 2000
    CUDNN_STATUS_BAD_PARAM_NULL_POINTER = 2002
    CUDNN_STATUS_BAD_PARAM_MISALIGNED_POINTER = 2003
    CUDNN_STATUS_BAD_PARAM_NOT_FINALIZED = 2004
    CUDNN_STATUS_BAD_PARAM_OUT_OF_BOUND = 2005
    CUDNN_STATUS_BAD_PARAM_SIZE_INSUFFICIENT = 2006
    CUDNN_STATUS_BAD_PARAM_STREAM_MISMATCH = 2007
    CUDNN_STATUS_BAD_PARAM_SHAPE_MISMATCH = 2008
    CUDNN_STATUS_BAD_PARAM_DUPLICATED_ENTRIES = 2009
    CUDNN_STATUS_BAD_PARAM_ATTRIBUTE_TYPE = 2010
    CUDNN_STATUS_NOT_SUPPORTED = 3000
    CUDNN_STATUS_NOT_SUPPORTED_GRAPH_PATTERN = 3001
    CUDNN_STATUS_NOT_SUPPORTED_SHAPE = 3002
    CUDNN_STATUS_NOT_SUPPORTED_DATA_TYPE = 3003
    CUDNN_STATUS_NOT_SUPPORTED_LAYOUT = 3004
    CUDNN_STATUS_NOT_SUPPORTED_INCOMPATIBLE_CUDA_DRIVER = 3005
    CUDNN_STATUS_NOT_SUPPORTED_INCOMPATIBLE_CUDART = 3006
    CUDNN_STATUS_NOT_SUPPORTED_ARCH_MISMATCH = 3007
    CUDNN_STATUS_NOT_SUPPORTED_RUNTIME_PREREQUISITE_MISSING = 3008
    CUDNN_STATUS_NOT_SUPPORTED_SUBLIBRARY_UNAVAILABLE = 3009
    CUDNN_STATUS_NOT_SUPPORTED_SHARED_MEMORY_INSUFFICIENT = 3010
    CUDNN_STATUS_NOT_SUPPORTED_PADDING = 3011
    CUDNN_STATUS_NOT_SUPPORTED_BAD_LAUNCH_PARAM = 3012
    CUDNN_STATUS_INTERNAL_ERROR = 4000
    CUDNN_STATUS_INTERNAL_ERROR_COMPILATION_FAILED = 4001
    CUDNN_STATUS_INTERNAL_ERROR_UNEXPECTED_VALUE = 4002
    CUDNN_STATUS_INTERNAL_ERROR_HOST_ALLOCATION_FAILED = 4003
    CUDNN_STATUS_INTERNAL_ERROR_DEVICE_ALLOCATION_FAILED = 4004
    CUDNN_STATUS_INTERNAL_ERROR_BAD_LAUNCH_PARAM = 4005
    CUDNN_STATUS_INTERNAL_ERROR_TEXTURE_CREATION_FAILED = 4006
    CUDNN_STATUS_EXECUTION_FAILED = 5000
    CUDNN_STATUS_EXECUTION_FAILED_CUDA_DRIVER = 5001
    CUDNN_STATUS_EXECUTION_FAILED_CUBLAS = 5002
    CUDNN_STATUS_EXECUTION_FAILED_CUDART = 5003
    CUDNN_STATUS_EXECUTION_FAILED_CURAND = 5004
    CUDNN_STATUS_ALLOC_FAILED = 4003
    CUDNN_STATUS_INVALID_VALUE = 2001
    CUDNN_STATUS_ARCH_MISMATCH = 3007
    CUDNN_STATUS_MAPPING_ERROR = 4006
    CUDNN_STATUS_RUNTIME_PREREQUISITE_MISSING = 3008
    CUDNN_STATUS_VERSION_MISMATCH = 1002
end

mutable struct cudnnContext end

const cudnnHandle_t = Ptr{cudnnContext}

function cudnnGetVersion()
    @gcsafe_ccall libcudnn.cudnnGetVersion()::Csize_t
end

function cudnnGetMaxDeviceVersion()
    @gcsafe_ccall libcudnn.cudnnGetMaxDeviceVersion()::Csize_t
end

function cudnnGetCudartVersion()
    @gcsafe_ccall libcudnn.cudnnGetCudartVersion()::Csize_t
end

function cudnnGetErrorString(status)
    @gcsafe_ccall libcudnn.cudnnGetErrorString(status::cudnnStatus_t)::Cstring
end

function cudnnGetLastErrorString(message, max_size)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetLastErrorString(message::Cstring,
                                                   max_size::Csize_t)::Cvoid
end

mutable struct cudnnRuntimeTag_t end

@cenum cudnnErrQueryMode_t::UInt32 begin
    CUDNN_ERRQUERY_RAWCODE = 0
    CUDNN_ERRQUERY_NONBLOCKING = 1
    CUDNN_ERRQUERY_BLOCKING = 2
end

@checked function cudnnQueryRuntimeError(handle, rstatus, mode, tag)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnQueryRuntimeError(handle::cudnnHandle_t,
                                                  rstatus::Ptr{cudnnStatus_t},
                                                  mode::cudnnErrQueryMode_t,
                                                  tag::Ptr{cudnnRuntimeTag_t})::cudnnStatus_t
end

@checked function cudnnGetProperty(type, value)
    @gcsafe_ccall libcudnn.cudnnGetProperty(type::libraryPropertyType,
                                            value::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnCreate(handle)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreate(handle::Ptr{cudnnHandle_t})::cudnnStatus_t
end

@checked function cudnnDestroy(handle)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroy(handle::cudnnHandle_t)::cudnnStatus_t
end

@checked function cudnnSetStream(handle, streamId)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetStream(handle::cudnnHandle_t,
                                          streamId::cudaStream_t)::cudnnStatus_t
end

@checked function cudnnGetStream(handle, streamId)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetStream(handle::cudnnHandle_t,
                                          streamId::Ptr{cudaStream_t})::cudnnStatus_t
end

@cenum cudnnDataType_t::UInt32 begin
    CUDNN_DATA_FLOAT = 0
    CUDNN_DATA_DOUBLE = 1
    CUDNN_DATA_HALF = 2
    CUDNN_DATA_INT8 = 3
    CUDNN_DATA_INT32 = 4
    CUDNN_DATA_INT8x4 = 5
    CUDNN_DATA_UINT8 = 6
    CUDNN_DATA_UINT8x4 = 7
    CUDNN_DATA_INT8x32 = 8
    CUDNN_DATA_BFLOAT16 = 9
    CUDNN_DATA_INT64 = 10
    CUDNN_DATA_BOOLEAN = 11
    CUDNN_DATA_FP8_E4M3 = 12
    CUDNN_DATA_FP8_E5M2 = 13
    CUDNN_DATA_FAST_FLOAT_FOR_FP8 = 14
end

@cenum cudnnMathType_t::UInt32 begin
    CUDNN_DEFAULT_MATH = 0
    CUDNN_TENSOR_OP_MATH = 1
    CUDNN_TENSOR_OP_MATH_ALLOW_CONVERSION = 2
    CUDNN_FMA_MATH = 3
end

@cenum cudnnNanPropagation_t::UInt32 begin
    CUDNN_NOT_PROPAGATE_NAN = 0
    CUDNN_PROPAGATE_NAN = 1
end

@cenum cudnnCTCGradMode_t::UInt32 begin
    CUDNN_CTC_ZERO_OOB_GRADIENTS = 0
    CUDNN_CTC_SKIP_OOB_GRADIENTS = 1
end

@cenum cudnnTensorFormat_t::UInt32 begin
    CUDNN_TENSOR_NCHW = 0
    CUDNN_TENSOR_NHWC = 1
    CUDNN_TENSOR_NCHW_VECT_C = 2
end

@cenum cudnnReduceTensorOp_t::UInt32 begin
    CUDNN_REDUCE_TENSOR_ADD = 0
    CUDNN_REDUCE_TENSOR_MUL = 1
    CUDNN_REDUCE_TENSOR_MIN = 2
    CUDNN_REDUCE_TENSOR_MAX = 3
    CUDNN_REDUCE_TENSOR_AMAX = 4
    CUDNN_REDUCE_TENSOR_AVG = 5
    CUDNN_REDUCE_TENSOR_NORM1 = 6
    CUDNN_REDUCE_TENSOR_NORM2 = 7
    CUDNN_REDUCE_TENSOR_MUL_NO_ZEROS = 8
end

@cenum cudnnActivationMode_t::UInt32 begin
    CUDNN_ACTIVATION_SIGMOID = 0
    CUDNN_ACTIVATION_RELU = 1
    CUDNN_ACTIVATION_TANH = 2
    CUDNN_ACTIVATION_CLIPPED_RELU = 3
    CUDNN_ACTIVATION_ELU = 4
    CUDNN_ACTIVATION_IDENTITY = 5
    CUDNN_ACTIVATION_SWISH = 6
end

@cenum cudnnSeverity_t::UInt32 begin
    CUDNN_SEV_FATAL = 0
    CUDNN_SEV_ERROR = 1
    CUDNN_SEV_WARNING = 2
    CUDNN_SEV_INFO = 3
end

struct cudnnDebugStruct
    cudnn_version::Cuint
    cudnnStatus::cudnnStatus_t
    time_sec::Cuint
    time_usec::Cuint
    time_delta::Cuint
    handle::cudnnHandle_t
    stream::cudaStream_t
    pid::Culonglong
    tid::Culonglong
    cudaDeviceId::Cint
    reserved::NTuple{15,Cint}
end

const cudnnDebug_t = cudnnDebugStruct

# typedef void ( * cudnnCallback_t ) ( cudnnSeverity_t sev , void * udata , const cudnnDebug_t * dbg , const char * msg )
const cudnnCallback_t = Ptr{Cvoid}

@checked function cudnnSetCallback(mask, udata, fptr)
    @gcsafe_ccall libcudnn.cudnnSetCallback(mask::Cuint, udata::Ptr{Cvoid},
                                            fptr::cudnnCallback_t)::cudnnStatus_t
end

@checked function cudnnGetCallback(mask, udata, fptr)
    @gcsafe_ccall libcudnn.cudnnGetCallback(mask::Ptr{Cuint}, udata::Ptr{Ptr{Cvoid}},
                                            fptr::Ptr{cudnnCallback_t})::cudnnStatus_t
end

@checked function cudnnGraphVersionCheck()
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGraphVersionCheck()::cudnnStatus_t
end

@cenum cudnnConvolutionMode_t::UInt32 begin
    CUDNN_CONVOLUTION = 0
    CUDNN_CROSS_CORRELATION = 1
end

@cenum cudnnReorderType_t::UInt32 begin
    CUDNN_DEFAULT_REORDER = 0
    CUDNN_NO_REORDER = 1
end

const cudnnBackendDescriptor_t = Ptr{Cvoid}

struct cudnnFractionStruct
    numerator::Int64
    denominator::Int64
end

const cudnnFraction_t = cudnnFractionStruct

@cenum cudnnPointwiseMode_t::UInt32 begin
    CUDNN_POINTWISE_ADD = 0
    CUDNN_POINTWISE_ADD_SQUARE = 5
    CUDNN_POINTWISE_DIV = 6
    CUDNN_POINTWISE_MAX = 3
    CUDNN_POINTWISE_MIN = 2
    CUDNN_POINTWISE_MOD = 7
    CUDNN_POINTWISE_MUL = 1
    CUDNN_POINTWISE_POW = 8
    CUDNN_POINTWISE_SUB = 9
    CUDNN_POINTWISE_ABS = 10
    CUDNN_POINTWISE_CEIL = 11
    CUDNN_POINTWISE_COS = 12
    CUDNN_POINTWISE_EXP = 13
    CUDNN_POINTWISE_FLOOR = 14
    CUDNN_POINTWISE_LOG = 15
    CUDNN_POINTWISE_NEG = 16
    CUDNN_POINTWISE_RSQRT = 17
    CUDNN_POINTWISE_SIN = 18
    CUDNN_POINTWISE_SQRT = 4
    CUDNN_POINTWISE_TAN = 19
    CUDNN_POINTWISE_ERF = 20
    CUDNN_POINTWISE_IDENTITY = 21
    CUDNN_POINTWISE_RECIPROCAL = 22
    CUDNN_POINTWISE_ATAN2 = 23
    CUDNN_POINTWISE_RELU_FWD = 100
    CUDNN_POINTWISE_TANH_FWD = 101
    CUDNN_POINTWISE_SIGMOID_FWD = 102
    CUDNN_POINTWISE_ELU_FWD = 103
    CUDNN_POINTWISE_GELU_FWD = 104
    CUDNN_POINTWISE_SOFTPLUS_FWD = 105
    CUDNN_POINTWISE_SWISH_FWD = 106
    CUDNN_POINTWISE_GELU_APPROX_TANH_FWD = 107
    CUDNN_POINTWISE_RELU_BWD = 200
    CUDNN_POINTWISE_TANH_BWD = 201
    CUDNN_POINTWISE_SIGMOID_BWD = 202
    CUDNN_POINTWISE_ELU_BWD = 203
    CUDNN_POINTWISE_GELU_BWD = 204
    CUDNN_POINTWISE_SOFTPLUS_BWD = 205
    CUDNN_POINTWISE_SWISH_BWD = 206
    CUDNN_POINTWISE_GELU_APPROX_TANH_BWD = 207
    CUDNN_POINTWISE_CMP_EQ = 300
    CUDNN_POINTWISE_CMP_NEQ = 301
    CUDNN_POINTWISE_CMP_GT = 302
    CUDNN_POINTWISE_CMP_GE = 303
    CUDNN_POINTWISE_CMP_LT = 304
    CUDNN_POINTWISE_CMP_LE = 305
    CUDNN_POINTWISE_LOGICAL_AND = 400
    CUDNN_POINTWISE_LOGICAL_OR = 401
    CUDNN_POINTWISE_LOGICAL_NOT = 402
    CUDNN_POINTWISE_GEN_INDEX = 501
    CUDNN_POINTWISE_BINARY_SELECT = 601
end

@cenum cudnnResampleMode_t::UInt32 begin
    CUDNN_RESAMPLE_NEAREST = 0
    CUDNN_RESAMPLE_BILINEAR = 1
    CUDNN_RESAMPLE_AVGPOOL = 2
    CUDNN_RESAMPLE_AVGPOOL_INCLUDE_PADDING = 2
    CUDNN_RESAMPLE_AVGPOOL_EXCLUDE_PADDING = 4
    CUDNN_RESAMPLE_MAXPOOL = 3
end

@cenum cudnnSignalMode_t::UInt32 begin
    CUDNN_SIGNAL_SET = 0
    CUDNN_SIGNAL_WAIT = 1
end

@cenum cudnnGenStatsMode_t::UInt32 begin
    CUDNN_GENSTATS_SUM_SQSUM = 0
end

@cenum cudnnBnFinalizeStatsMode_t::UInt32 begin
    CUDNN_BN_FINALIZE_STATISTICS_TRAINING = 0
    CUDNN_BN_FINALIZE_STATISTICS_INFERENCE = 1
end

@cenum cudnnRngDistribution_t::UInt32 begin
    CUDNN_RNG_DISTRIBUTION_BERNOULLI = 0
    CUDNN_RNG_DISTRIBUTION_UNIFORM = 1
    CUDNN_RNG_DISTRIBUTION_NORMAL = 2
end

@cenum cudnnBackendAttributeName_t::UInt32 begin
    CUDNN_ATTR_POINTWISE_MODE = 0
    CUDNN_ATTR_POINTWISE_MATH_PREC = 1
    CUDNN_ATTR_POINTWISE_NAN_PROPAGATION = 2
    CUDNN_ATTR_POINTWISE_RELU_LOWER_CLIP = 3
    CUDNN_ATTR_POINTWISE_RELU_UPPER_CLIP = 4
    CUDNN_ATTR_POINTWISE_RELU_LOWER_CLIP_SLOPE = 5
    CUDNN_ATTR_POINTWISE_ELU_ALPHA = 6
    CUDNN_ATTR_POINTWISE_SOFTPLUS_BETA = 7
    CUDNN_ATTR_POINTWISE_SWISH_BETA = 8
    CUDNN_ATTR_POINTWISE_AXIS = 9
    CUDNN_ATTR_CONVOLUTION_COMP_TYPE = 100
    CUDNN_ATTR_CONVOLUTION_CONV_MODE = 101
    CUDNN_ATTR_CONVOLUTION_DILATIONS = 102
    CUDNN_ATTR_CONVOLUTION_FILTER_STRIDES = 103
    CUDNN_ATTR_CONVOLUTION_POST_PADDINGS = 104
    CUDNN_ATTR_CONVOLUTION_PRE_PADDINGS = 105
    CUDNN_ATTR_CONVOLUTION_SPATIAL_DIMS = 106
    CUDNN_ATTR_ENGINEHEUR_MODE = 200
    CUDNN_ATTR_ENGINEHEUR_OPERATION_GRAPH = 201
    CUDNN_ATTR_ENGINEHEUR_RESULTS = 202
    CUDNN_ATTR_ENGINEHEUR_SM_COUNT_TARGET = 203
    CUDNN_ATTR_ENGINECFG_ENGINE = 300
    CUDNN_ATTR_ENGINECFG_INTERMEDIATE_INFO = 301
    CUDNN_ATTR_ENGINECFG_KNOB_CHOICES = 302
    CUDNN_ATTR_ENGINECFG_WORKSPACE_SIZE = 303
    CUDNN_ATTR_ENGINECFG_SHARED_MEMORY_USED = 304
    CUDNN_ATTR_EXECUTION_PLAN_HANDLE = 400
    CUDNN_ATTR_EXECUTION_PLAN_ENGINE_CONFIG = 401
    CUDNN_ATTR_EXECUTION_PLAN_WORKSPACE_SIZE = 402
    CUDNN_ATTR_EXECUTION_PLAN_COMPUTED_INTERMEDIATE_UIDS = 403
    CUDNN_ATTR_EXECUTION_PLAN_RUN_ONLY_INTERMEDIATE_UIDS = 404
    CUDNN_ATTR_EXECUTION_PLAN_JSON_REPRESENTATION = 405
    CUDNN_ATTR_EXECUTION_PLAN_KERNEL_CACHE = 406
    CUDNN_ATTR_INTERMEDIATE_INFO_UNIQUE_ID = 500
    CUDNN_ATTR_INTERMEDIATE_INFO_SIZE = 501
    CUDNN_ATTR_INTERMEDIATE_INFO_DEPENDENT_DATA_UIDS = 502
    CUDNN_ATTR_INTERMEDIATE_INFO_DEPENDENT_ATTRIBUTES = 503
    CUDNN_ATTR_KNOB_CHOICE_KNOB_TYPE = 600
    CUDNN_ATTR_KNOB_CHOICE_KNOB_VALUE = 601
    CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_ALPHA = 700
    CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_BETA = 701
    CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_CONV_DESC = 702
    CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_W = 703
    CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_X = 704
    CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_Y = 705
    CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_ALPHA = 706
    CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_BETA = 707
    CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_CONV_DESC = 708
    CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_W = 709
    CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_DX = 710
    CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_DY = 711
    CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_ALPHA = 712
    CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_BETA = 713
    CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_CONV_DESC = 714
    CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_DW = 715
    CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_X = 716
    CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_DY = 717
    CUDNN_ATTR_OPERATION_POINTWISE_PW_DESCRIPTOR = 750
    CUDNN_ATTR_OPERATION_POINTWISE_XDESC = 751
    CUDNN_ATTR_OPERATION_POINTWISE_BDESC = 752
    CUDNN_ATTR_OPERATION_POINTWISE_YDESC = 753
    CUDNN_ATTR_OPERATION_POINTWISE_ALPHA1 = 754
    CUDNN_ATTR_OPERATION_POINTWISE_ALPHA2 = 755
    CUDNN_ATTR_OPERATION_POINTWISE_DXDESC = 756
    CUDNN_ATTR_OPERATION_POINTWISE_DYDESC = 757
    CUDNN_ATTR_OPERATION_POINTWISE_TDESC = 758
    CUDNN_ATTR_OPERATION_GENSTATS_MODE = 770
    CUDNN_ATTR_OPERATION_GENSTATS_MATH_PREC = 771
    CUDNN_ATTR_OPERATION_GENSTATS_XDESC = 772
    CUDNN_ATTR_OPERATION_GENSTATS_SUMDESC = 773
    CUDNN_ATTR_OPERATION_GENSTATS_SQSUMDESC = 774
    CUDNN_ATTR_OPERATION_BN_FINALIZE_STATS_MODE = 780
    CUDNN_ATTR_OPERATION_BN_FINALIZE_MATH_PREC = 781
    CUDNN_ATTR_OPERATION_BN_FINALIZE_Y_SUM_DESC = 782
    CUDNN_ATTR_OPERATION_BN_FINALIZE_Y_SQ_SUM_DESC = 783
    CUDNN_ATTR_OPERATION_BN_FINALIZE_SCALE_DESC = 784
    CUDNN_ATTR_OPERATION_BN_FINALIZE_BIAS_DESC = 785
    CUDNN_ATTR_OPERATION_BN_FINALIZE_PREV_RUNNING_MEAN_DESC = 786
    CUDNN_ATTR_OPERATION_BN_FINALIZE_PREV_RUNNING_VAR_DESC = 787
    CUDNN_ATTR_OPERATION_BN_FINALIZE_UPDATED_RUNNING_MEAN_DESC = 788
    CUDNN_ATTR_OPERATION_BN_FINALIZE_UPDATED_RUNNING_VAR_DESC = 789
    CUDNN_ATTR_OPERATION_BN_FINALIZE_SAVED_MEAN_DESC = 790
    CUDNN_ATTR_OPERATION_BN_FINALIZE_SAVED_INV_STD_DESC = 791
    CUDNN_ATTR_OPERATION_BN_FINALIZE_EQ_SCALE_DESC = 792
    CUDNN_ATTR_OPERATION_BN_FINALIZE_EQ_BIAS_DESC = 793
    CUDNN_ATTR_OPERATION_BN_FINALIZE_ACCUM_COUNT_DESC = 794
    CUDNN_ATTR_OPERATION_BN_FINALIZE_EPSILON_DESC = 795
    CUDNN_ATTR_OPERATION_BN_FINALIZE_EXP_AVERATE_FACTOR_DESC = 796
    CUDNN_ATTR_OPERATIONGRAPH_HANDLE = 800
    CUDNN_ATTR_OPERATIONGRAPH_OPS = 801
    CUDNN_ATTR_OPERATIONGRAPH_ENGINE_GLOBAL_COUNT = 802
    CUDNN_ATTR_OPERATIONGRAPH_IS_DYNAMIC_SHAPE_ENABLED = 803
    CUDNN_ATTR_TENSOR_BYTE_ALIGNMENT = 900
    CUDNN_ATTR_TENSOR_DATA_TYPE = 901
    CUDNN_ATTR_TENSOR_DIMENSIONS = 902
    CUDNN_ATTR_TENSOR_STRIDES = 903
    CUDNN_ATTR_TENSOR_VECTOR_COUNT = 904
    CUDNN_ATTR_TENSOR_VECTORIZED_DIMENSION = 905
    CUDNN_ATTR_TENSOR_UNIQUE_ID = 906
    CUDNN_ATTR_TENSOR_IS_VIRTUAL = 907
    CUDNN_ATTR_TENSOR_IS_BY_VALUE = 908
    CUDNN_ATTR_TENSOR_REORDERING_MODE = 909
    CUDNN_ATTR_TENSOR_RAGGED_OFFSET_DESC = 913
    CUDNN_ATTR_VARIANT_PACK_UNIQUE_IDS = 1000
    CUDNN_ATTR_VARIANT_PACK_DATA_POINTERS = 1001
    CUDNN_ATTR_VARIANT_PACK_INTERMEDIATES = 1002
    CUDNN_ATTR_VARIANT_PACK_WORKSPACE = 1003
    CUDNN_ATTR_LAYOUT_INFO_TENSOR_UID = 1100
    CUDNN_ATTR_LAYOUT_INFO_TYPES = 1101
    CUDNN_ATTR_KNOB_INFO_TYPE = 1200
    CUDNN_ATTR_KNOB_INFO_MAXIMUM_VALUE = 1201
    CUDNN_ATTR_KNOB_INFO_MINIMUM_VALUE = 1202
    CUDNN_ATTR_KNOB_INFO_STRIDE = 1203
    CUDNN_ATTR_ENGINE_OPERATION_GRAPH = 1300
    CUDNN_ATTR_ENGINE_GLOBAL_INDEX = 1301
    CUDNN_ATTR_ENGINE_KNOB_INFO = 1302
    CUDNN_ATTR_ENGINE_NUMERICAL_NOTE = 1303
    CUDNN_ATTR_ENGINE_LAYOUT_INFO = 1304
    CUDNN_ATTR_ENGINE_BEHAVIOR_NOTE = 1305
    CUDNN_ATTR_ENGINE_SM_COUNT_TARGET = 1306
    CUDNN_ATTR_MATMUL_COMP_TYPE = 1500
    CUDNN_ATTR_MATMUL_PADDING_VALUE = 1503
    CUDNN_ATTR_OPERATION_MATMUL_ADESC = 1520
    CUDNN_ATTR_OPERATION_MATMUL_BDESC = 1521
    CUDNN_ATTR_OPERATION_MATMUL_CDESC = 1522
    CUDNN_ATTR_OPERATION_MATMUL_DESC = 1523
    CUDNN_ATTR_OPERATION_MATMUL_IRREGULARLY_STRIDED_BATCH_COUNT = 1524
    CUDNN_ATTR_OPERATION_MATMUL_GEMM_M_OVERRIDE_DESC = 1525
    CUDNN_ATTR_OPERATION_MATMUL_GEMM_N_OVERRIDE_DESC = 1526
    CUDNN_ATTR_OPERATION_MATMUL_GEMM_K_OVERRIDE_DESC = 1527
    CUDNN_ATTR_REDUCTION_OPERATOR = 1600
    CUDNN_ATTR_REDUCTION_COMP_TYPE = 1601
    CUDNN_ATTR_OPERATION_REDUCTION_XDESC = 1610
    CUDNN_ATTR_OPERATION_REDUCTION_YDESC = 1611
    CUDNN_ATTR_OPERATION_REDUCTION_DESC = 1612
    CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_MATH_PREC = 1620
    CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_MEAN_DESC = 1621
    CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_INVSTD_DESC = 1622
    CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_BN_SCALE_DESC = 1623
    CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_X_DESC = 1624
    CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_DY_DESC = 1625
    CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_DBN_SCALE_DESC = 1626
    CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_DBN_BIAS_DESC = 1627
    CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_EQ_DY_SCALE_DESC = 1628
    CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_EQ_X_SCALE_DESC = 1629
    CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_EQ_BIAS = 1630
    CUDNN_ATTR_RESAMPLE_MODE = 1700
    CUDNN_ATTR_RESAMPLE_COMP_TYPE = 1701
    CUDNN_ATTR_RESAMPLE_SPATIAL_DIMS = 1702
    CUDNN_ATTR_RESAMPLE_POST_PADDINGS = 1703
    CUDNN_ATTR_RESAMPLE_PRE_PADDINGS = 1704
    CUDNN_ATTR_RESAMPLE_STRIDES = 1705
    CUDNN_ATTR_RESAMPLE_WINDOW_DIMS = 1706
    CUDNN_ATTR_RESAMPLE_NAN_PROPAGATION = 1707
    CUDNN_ATTR_RESAMPLE_PADDING_MODE = 1708
    CUDNN_ATTR_OPERATION_RESAMPLE_FWD_XDESC = 1710
    CUDNN_ATTR_OPERATION_RESAMPLE_FWD_YDESC = 1711
    CUDNN_ATTR_OPERATION_RESAMPLE_FWD_IDXDESC = 1712
    CUDNN_ATTR_OPERATION_RESAMPLE_FWD_ALPHA = 1713
    CUDNN_ATTR_OPERATION_RESAMPLE_FWD_BETA = 1714
    CUDNN_ATTR_OPERATION_RESAMPLE_FWD_DESC = 1716
    CUDNN_ATTR_OPERATION_RESAMPLE_BWD_DXDESC = 1720
    CUDNN_ATTR_OPERATION_RESAMPLE_BWD_DYDESC = 1721
    CUDNN_ATTR_OPERATION_RESAMPLE_BWD_IDXDESC = 1722
    CUDNN_ATTR_OPERATION_RESAMPLE_BWD_ALPHA = 1723
    CUDNN_ATTR_OPERATION_RESAMPLE_BWD_BETA = 1724
    CUDNN_ATTR_OPERATION_RESAMPLE_BWD_DESC = 1725
    CUDNN_ATTR_OPERATION_RESAMPLE_BWD_XDESC = 1726
    CUDNN_ATTR_OPERATION_RESAMPLE_BWD_YDESC = 1727
    CUDNN_ATTR_OPERATION_CONCAT_AXIS = 1800
    CUDNN_ATTR_OPERATION_CONCAT_INPUT_DESCS = 1801
    CUDNN_ATTR_OPERATION_CONCAT_INPLACE_INDEX = 1802
    CUDNN_ATTR_OPERATION_CONCAT_OUTPUT_DESC = 1803
    CUDNN_ATTR_OPERATION_SIGNAL_MODE = 1900
    CUDNN_ATTR_OPERATION_SIGNAL_FLAGDESC = 1901
    CUDNN_ATTR_OPERATION_SIGNAL_VALUE = 1902
    CUDNN_ATTR_OPERATION_SIGNAL_XDESC = 1903
    CUDNN_ATTR_OPERATION_SIGNAL_YDESC = 1904
    CUDNN_ATTR_OPERATION_PAGED_CACHE_LOAD_CONTAINER_DESC = 1950
    CUDNN_ATTR_OPERATION_PAGED_CACHE_LOAD_YDESC = 1951
    CUDNN_ATTR_OPERATION_PAGED_CACHE_LOAD_SEQUENCE_DESC = 1952
    CUDNN_ATTR_OPERATION_PAGED_CACHE_LOAD_PAGE_TABLE_DESC = 1953
    CUDNN_ATTR_OPERATION_NORM_FWD_MODE = 2000
    CUDNN_ATTR_OPERATION_NORM_FWD_PHASE = 2001
    CUDNN_ATTR_OPERATION_NORM_FWD_XDESC = 2002
    CUDNN_ATTR_OPERATION_NORM_FWD_MEAN_DESC = 2003
    CUDNN_ATTR_OPERATION_NORM_FWD_INV_VARIANCE_DESC = 2004
    CUDNN_ATTR_OPERATION_NORM_FWD_SCALE_DESC = 2005
    CUDNN_ATTR_OPERATION_NORM_FWD_BIAS_DESC = 2006
    CUDNN_ATTR_OPERATION_NORM_FWD_EPSILON_DESC = 2007
    CUDNN_ATTR_OPERATION_NORM_FWD_EXP_AVG_FACTOR_DESC = 2008
    CUDNN_ATTR_OPERATION_NORM_FWD_INPUT_RUNNING_MEAN_DESC = 2009
    CUDNN_ATTR_OPERATION_NORM_FWD_INPUT_RUNNING_VAR_DESC = 2010
    CUDNN_ATTR_OPERATION_NORM_FWD_OUTPUT_RUNNING_MEAN_DESC = 2011
    CUDNN_ATTR_OPERATION_NORM_FWD_OUTPUT_RUNNING_VAR_DESC = 2012
    CUDNN_ATTR_OPERATION_NORM_FWD_YDESC = 2013
    CUDNN_ATTR_OPERATION_NORM_FWD_PEER_STAT_DESCS = 2014
    CUDNN_ATTR_OPERATION_NORM_BWD_MODE = 2100
    CUDNN_ATTR_OPERATION_NORM_BWD_XDESC = 2101
    CUDNN_ATTR_OPERATION_NORM_BWD_MEAN_DESC = 2102
    CUDNN_ATTR_OPERATION_NORM_BWD_INV_VARIANCE_DESC = 2103
    CUDNN_ATTR_OPERATION_NORM_BWD_DYDESC = 2104
    CUDNN_ATTR_OPERATION_NORM_BWD_SCALE_DESC = 2105
    CUDNN_ATTR_OPERATION_NORM_BWD_EPSILON_DESC = 2106
    CUDNN_ATTR_OPERATION_NORM_BWD_DSCALE_DESC = 2107
    CUDNN_ATTR_OPERATION_NORM_BWD_DBIAS_DESC = 2108
    CUDNN_ATTR_OPERATION_NORM_BWD_DXDESC = 2109
    CUDNN_ATTR_OPERATION_NORM_BWD_PEER_STAT_DESCS = 2110
    CUDNN_ATTR_OPERATION_RESHAPE_XDESC = 2200
    CUDNN_ATTR_OPERATION_RESHAPE_YDESC = 2201
    CUDNN_ATTR_RNG_DISTRIBUTION = 2300
    CUDNN_ATTR_RNG_NORMAL_DIST_MEAN = 2301
    CUDNN_ATTR_RNG_NORMAL_DIST_STANDARD_DEVIATION = 2302
    CUDNN_ATTR_RNG_UNIFORM_DIST_MAXIMUM = 2303
    CUDNN_ATTR_RNG_UNIFORM_DIST_MINIMUM = 2304
    CUDNN_ATTR_RNG_BERNOULLI_DIST_PROBABILITY = 2305
    CUDNN_ATTR_OPERATION_RNG_YDESC = 2310
    CUDNN_ATTR_OPERATION_RNG_SEED = 2311
    CUDNN_ATTR_OPERATION_RNG_DESC = 2312
    CUDNN_ATTR_OPERATION_RNG_OFFSET_DESC = 2313
    CUDNN_ATTR_KERNEL_CACHE_IS_ENGINECFG_KERNEL_CACHED = 2400
end

@cenum cudnnBackendAttributeType_t::UInt32 begin
    CUDNN_TYPE_HANDLE = 0
    CUDNN_TYPE_DATA_TYPE = 1
    CUDNN_TYPE_BOOLEAN = 2
    CUDNN_TYPE_INT64 = 3
    CUDNN_TYPE_FLOAT = 4
    CUDNN_TYPE_DOUBLE = 5
    CUDNN_TYPE_VOID_PTR = 6
    CUDNN_TYPE_CONVOLUTION_MODE = 7
    CUDNN_TYPE_HEUR_MODE = 8
    CUDNN_TYPE_KNOB_TYPE = 9
    CUDNN_TYPE_NAN_PROPOGATION = 10
    CUDNN_TYPE_NUMERICAL_NOTE = 11
    CUDNN_TYPE_LAYOUT_TYPE = 12
    CUDNN_TYPE_ATTRIB_NAME = 13
    CUDNN_TYPE_POINTWISE_MODE = 14
    CUDNN_TYPE_BACKEND_DESCRIPTOR = 15
    CUDNN_TYPE_GENSTATS_MODE = 16
    CUDNN_TYPE_BN_FINALIZE_STATS_MODE = 17
    CUDNN_TYPE_REDUCTION_OPERATOR_TYPE = 18
    CUDNN_TYPE_BEHAVIOR_NOTE = 19
    CUDNN_TYPE_TENSOR_REORDERING_MODE = 20
    CUDNN_TYPE_RESAMPLE_MODE = 21
    CUDNN_TYPE_PADDING_MODE = 22
    CUDNN_TYPE_INT32 = 23
    CUDNN_TYPE_CHAR = 24
    CUDNN_TYPE_SIGNAL_MODE = 25
    CUDNN_TYPE_FRACTION = 26
    CUDNN_TYPE_NORM_MODE = 27
    CUDNN_TYPE_NORM_FWD_PHASE = 28
    CUDNN_TYPE_RNG_DISTRIBUTION = 29
end

@cenum cudnnBackendDescriptorType_t::UInt32 begin
    CUDNN_BACKEND_POINTWISE_DESCRIPTOR = 0
    CUDNN_BACKEND_CONVOLUTION_DESCRIPTOR = 1
    CUDNN_BACKEND_ENGINE_DESCRIPTOR = 2
    CUDNN_BACKEND_ENGINECFG_DESCRIPTOR = 3
    CUDNN_BACKEND_ENGINEHEUR_DESCRIPTOR = 4
    CUDNN_BACKEND_EXECUTION_PLAN_DESCRIPTOR = 5
    CUDNN_BACKEND_INTERMEDIATE_INFO_DESCRIPTOR = 6
    CUDNN_BACKEND_KNOB_CHOICE_DESCRIPTOR = 7
    CUDNN_BACKEND_KNOB_INFO_DESCRIPTOR = 8
    CUDNN_BACKEND_LAYOUT_INFO_DESCRIPTOR = 9
    CUDNN_BACKEND_OPERATION_CONVOLUTION_FORWARD_DESCRIPTOR = 10
    CUDNN_BACKEND_OPERATION_CONVOLUTION_BACKWARD_FILTER_DESCRIPTOR = 11
    CUDNN_BACKEND_OPERATION_CONVOLUTION_BACKWARD_DATA_DESCRIPTOR = 12
    CUDNN_BACKEND_OPERATION_POINTWISE_DESCRIPTOR = 13
    CUDNN_BACKEND_OPERATION_GEN_STATS_DESCRIPTOR = 14
    CUDNN_BACKEND_OPERATIONGRAPH_DESCRIPTOR = 15
    CUDNN_BACKEND_VARIANT_PACK_DESCRIPTOR = 16
    CUDNN_BACKEND_TENSOR_DESCRIPTOR = 17
    CUDNN_BACKEND_MATMUL_DESCRIPTOR = 18
    CUDNN_BACKEND_OPERATION_MATMUL_DESCRIPTOR = 19
    CUDNN_BACKEND_OPERATION_BN_FINALIZE_STATISTICS_DESCRIPTOR = 20
    CUDNN_BACKEND_REDUCTION_DESCRIPTOR = 21
    CUDNN_BACKEND_OPERATION_REDUCTION_DESCRIPTOR = 22
    CUDNN_BACKEND_OPERATION_BN_BWD_WEIGHTS_DESCRIPTOR = 23
    CUDNN_BACKEND_RESAMPLE_DESCRIPTOR = 24
    CUDNN_BACKEND_OPERATION_RESAMPLE_FWD_DESCRIPTOR = 25
    CUDNN_BACKEND_OPERATION_RESAMPLE_BWD_DESCRIPTOR = 26
    CUDNN_BACKEND_OPERATION_CONCAT_DESCRIPTOR = 27
    CUDNN_BACKEND_OPERATION_SIGNAL_DESCRIPTOR = 28
    CUDNN_BACKEND_OPERATION_NORM_FORWARD_DESCRIPTOR = 29
    CUDNN_BACKEND_OPERATION_NORM_BACKWARD_DESCRIPTOR = 30
    CUDNN_BACKEND_OPERATION_RESHAPE_DESCRIPTOR = 31
    CUDNN_BACKEND_RNG_DESCRIPTOR = 32
    CUDNN_BACKEND_OPERATION_RNG_DESCRIPTOR = 33
    CUDNN_BACKEND_KERNEL_CACHE_DESCRIPTOR = 34
    CUDNN_BACKEND_OPERATION_PAGED_CACHE_LOAD_DESCRIPTOR = 35
end

@cenum cudnnBackendNumericalNote_t::UInt32 begin
    CUDNN_NUMERICAL_NOTE_TENSOR_CORE = 0
    CUDNN_NUMERICAL_NOTE_DOWN_CONVERT_INPUTS = 1
    CUDNN_NUMERICAL_NOTE_REDUCED_PRECISION_REDUCTION = 2
    CUDNN_NUMERICAL_NOTE_FFT = 3
    CUDNN_NUMERICAL_NOTE_NONDETERMINISTIC = 4
    CUDNN_NUMERICAL_NOTE_WINOGRAD = 5
    CUDNN_NUMERICAL_NOTE_WINOGRAD_TILE_4x4 = 6
    CUDNN_NUMERICAL_NOTE_WINOGRAD_TILE_6x6 = 7
    CUDNN_NUMERICAL_NOTE_WINOGRAD_TILE_13x13 = 8
    CUDNN_NUMERICAL_NOTE_STRICT_NAN_PROP = 9
    CUDNN_NUMERICAL_NOTE_TYPE_COUNT = 10
end

@cenum cudnnBackendBehaviorNote_t::UInt32 begin
    CUDNN_BEHAVIOR_NOTE_RUNTIME_COMPILATION = 0
    CUDNN_BEHAVIOR_NOTE_REQUIRES_FILTER_INT8x32_REORDER = 1
    CUDNN_BEHAVIOR_NOTE_REQUIRES_BIAS_INT8x32_REORDER = 2
    CUDNN_BEHAVIOR_NOTE_TYPE_COUNT = 3
end

@cenum cudnnBackendKnobType_t::UInt32 begin
    CUDNN_KNOB_TYPE_SPLIT_K = 0
    CUDNN_KNOB_TYPE_SWIZZLE = 1
    CUDNN_KNOB_TYPE_TILE_SIZE = 2
    CUDNN_KNOB_TYPE_USE_TEX = 3
    CUDNN_KNOB_TYPE_EDGE = 4
    CUDNN_KNOB_TYPE_KBLOCK = 5
    CUDNN_KNOB_TYPE_LDGA = 6
    CUDNN_KNOB_TYPE_LDGB = 7
    CUDNN_KNOB_TYPE_CHUNK_K = 8
    CUDNN_KNOB_TYPE_SPLIT_H = 9
    CUDNN_KNOB_TYPE_WINO_TILE = 10
    CUDNN_KNOB_TYPE_MULTIPLY = 11
    CUDNN_KNOB_TYPE_SPLIT_K_BUF = 12
    CUDNN_KNOB_TYPE_TILEK = 13
    CUDNN_KNOB_TYPE_STAGES = 14
    CUDNN_KNOB_TYPE_REDUCTION_MODE = 15
    CUDNN_KNOB_TYPE_CTA_SPLIT_K_MODE = 16
    CUDNN_KNOB_TYPE_SPLIT_K_SLC = 17
    CUDNN_KNOB_TYPE_IDX_MODE = 18
    CUDNN_KNOB_TYPE_SLICED = 19
    CUDNN_KNOB_TYPE_SPLIT_RS = 20
    CUDNN_KNOB_TYPE_SINGLEBUFFER = 21
    CUDNN_KNOB_TYPE_LDGC = 22
    CUDNN_KNOB_TYPE_SPECFILT = 23
    CUDNN_KNOB_TYPE_KERNEL_CFG = 24
    CUDNN_KNOB_TYPE_WORKSPACE = 25
    CUDNN_KNOB_TYPE_TILE_CGA = 26
    CUDNN_KNOB_TYPE_TILE_CGA_M = 27
    CUDNN_KNOB_TYPE_TILE_CGA_N = 28
    CUDNN_KNOB_TYPE_BLOCK_SIZE = 29
    CUDNN_KNOB_TYPE_OCCUPANCY = 30
    CUDNN_KNOB_TYPE_ARRAY_SIZE_PER_THREAD = 31
    CUDNN_KNOB_TYPE_NUM_C_PER_BLOCK = 32
    CUDNN_KNOB_TYPE_SPLIT_COLS = 33
    CUDNN_KNOB_TYPE_TILE_ROWS = 34
    CUDNN_KNOB_TYPE_TILE_COLS = 35
    CUDNN_KNOB_TYPE_LOAD_SIZE = 36
    CUDNN_KNOB_TYPE_COUNTS = 37
end

@cenum cudnnBackendLayoutType_t::UInt32 begin
    CUDNN_LAYOUT_TYPE_PREFERRED_NCHW = 0
    CUDNN_LAYOUT_TYPE_PREFERRED_NHWC = 1
    CUDNN_LAYOUT_TYPE_PREFERRED_PAD4CK = 2
    CUDNN_LAYOUT_TYPE_PREFERRED_PAD8CK = 3
    CUDNN_LAYOUT_TYPE_COUNT = 4
end

@cenum cudnnBackendHeurMode_t::UInt32 begin
    CUDNN_HEUR_MODE_INSTANT = 0
    CUDNN_HEUR_MODE_B = 1
    CUDNN_HEUR_MODE_FALLBACK = 2
    CUDNN_HEUR_MODE_A = 3
    CUDNN_HEUR_MODES_COUNT = 4
end

@cenum cudnnBackendTensorReordering_t::UInt32 begin
    CUDNN_TENSOR_REORDERING_NONE = 0
    CUDNN_TENSOR_REORDERING_INT8x32 = 1
    CUDNN_TENSOR_REORDERING_F16x16 = 2
end

@cenum cudnnPaddingMode_t::UInt32 begin
    CUDNN_ZERO_PAD = 0
    CUDNN_NEG_INF_PAD = 1
    CUDNN_EDGE_VAL_PAD = 2
end

@cenum cudnnBackendNormMode_t::UInt32 begin
    CUDNN_LAYER_NORM = 0
    CUDNN_INSTANCE_NORM = 1
    CUDNN_BATCH_NORM = 2
    CUDNN_GROUP_NORM = 3
    CUDNN_RMS_NORM = 4
end

@cenum cudnnBackendNormFwdPhase_t::UInt32 begin
    CUDNN_NORM_FWD_INFERENCE = 0
    CUDNN_NORM_FWD_TRAINING = 1
end

@checked function cudnnBackendCreateDescriptor(descriptorType, descriptor)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnBackendCreateDescriptor(descriptorType::cudnnBackendDescriptorType_t,
                                                        descriptor::Ptr{cudnnBackendDescriptor_t})::cudnnStatus_t
end

@checked function cudnnBackendDestroyDescriptor(descriptor)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnBackendDestroyDescriptor(descriptor::cudnnBackendDescriptor_t)::cudnnStatus_t
end

@checked function cudnnBackendInitialize(descriptor)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnBackendInitialize(descriptor::cudnnBackendDescriptor_t)::cudnnStatus_t
end

@checked function cudnnBackendFinalize(descriptor)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnBackendFinalize(descriptor::cudnnBackendDescriptor_t)::cudnnStatus_t
end

@checked function cudnnBackendSetAttribute(descriptor, attributeName, attributeType,
                                           elementCount, arrayOfElements)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnBackendSetAttribute(descriptor::cudnnBackendDescriptor_t,
                                                    attributeName::cudnnBackendAttributeName_t,
                                                    attributeType::cudnnBackendAttributeType_t,
                                                    elementCount::Int64,
                                                    arrayOfElements::Ptr{Cvoid})::cudnnStatus_t
end

@checked function cudnnBackendGetAttribute(descriptor, attributeName, attributeType,
                                           requestedElementCount, elementCount,
                                           arrayOfElements)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnBackendGetAttribute(descriptor::cudnnBackendDescriptor_t,
                                                    attributeName::cudnnBackendAttributeName_t,
                                                    attributeType::cudnnBackendAttributeType_t,
                                                    requestedElementCount::Int64,
                                                    elementCount::Ptr{Int64},
                                                    arrayOfElements::Ptr{Cvoid})::cudnnStatus_t
end

@checked function cudnnBackendExecute(handle, executionPlan, variantPack)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnBackendExecute(handle::cudnnHandle_t,
                                               executionPlan::cudnnBackendDescriptor_t,
                                               variantPack::cudnnBackendDescriptor_t)::cudnnStatus_t
end

mutable struct cudnnTensorStruct end

const cudnnTensorDescriptor_t = Ptr{cudnnTensorStruct}

mutable struct cudnnPoolingStruct end

const cudnnPoolingDescriptor_t = Ptr{cudnnPoolingStruct}

mutable struct cudnnFilterStruct end

const cudnnFilterDescriptor_t = Ptr{cudnnFilterStruct}

mutable struct cudnnLRNStruct end

const cudnnLRNDescriptor_t = Ptr{cudnnLRNStruct}

mutable struct cudnnActivationStruct end

const cudnnActivationDescriptor_t = Ptr{cudnnActivationStruct}

mutable struct cudnnSpatialTransformerStruct end

const cudnnSpatialTransformerDescriptor_t = Ptr{cudnnSpatialTransformerStruct}

mutable struct cudnnOpTensorStruct end

const cudnnOpTensorDescriptor_t = Ptr{cudnnOpTensorStruct}

mutable struct cudnnReduceTensorStruct end

const cudnnReduceTensorDescriptor_t = Ptr{cudnnReduceTensorStruct}

mutable struct cudnnCTCLossStruct end

const cudnnCTCLossDescriptor_t = Ptr{cudnnCTCLossStruct}

mutable struct cudnnTensorTransformStruct end

const cudnnTensorTransformDescriptor_t = Ptr{cudnnTensorTransformStruct}

@cenum cudnnDeterminism_t::UInt32 begin
    CUDNN_NON_DETERMINISTIC = 0
    CUDNN_DETERMINISTIC = 1
end

@checked function cudnnCreateTensorDescriptor(tensorDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateTensorDescriptor(tensorDesc::Ptr{cudnnTensorDescriptor_t})::cudnnStatus_t
end

@checked function cudnnSetTensor4dDescriptor(tensorDesc, format, dataType, n, c, h, w)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetTensor4dDescriptor(tensorDesc::cudnnTensorDescriptor_t,
                                                      format::cudnnTensorFormat_t,
                                                      dataType::cudnnDataType_t, n::Cint,
                                                      c::Cint, h::Cint,
                                                      w::Cint)::cudnnStatus_t
end

@checked function cudnnSetTensor4dDescriptorEx(tensorDesc, dataType, n, c, h, w, nStride,
                                               cStride, hStride, wStride)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetTensor4dDescriptorEx(tensorDesc::cudnnTensorDescriptor_t,
                                                        dataType::cudnnDataType_t, n::Cint,
                                                        c::Cint, h::Cint, w::Cint,
                                                        nStride::Cint, cStride::Cint,
                                                        hStride::Cint,
                                                        wStride::Cint)::cudnnStatus_t
end

@checked function cudnnGetTensor4dDescriptor(tensorDesc, dataType, n, c, h, w, nStride,
                                             cStride, hStride, wStride)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetTensor4dDescriptor(tensorDesc::cudnnTensorDescriptor_t,
                                                      dataType::Ptr{cudnnDataType_t},
                                                      n::Ptr{Cint}, c::Ptr{Cint},
                                                      h::Ptr{Cint}, w::Ptr{Cint},
                                                      nStride::Ptr{Cint},
                                                      cStride::Ptr{Cint},
                                                      hStride::Ptr{Cint},
                                                      wStride::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnSetTensorNdDescriptor(tensorDesc, dataType, nbDims, dimA, strideA)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetTensorNdDescriptor(tensorDesc::cudnnTensorDescriptor_t,
                                                      dataType::cudnnDataType_t,
                                                      nbDims::Cint, dimA::Ptr{Cint},
                                                      strideA::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnSetTensorNdDescriptorEx(tensorDesc, format, dataType, nbDims, dimA)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetTensorNdDescriptorEx(tensorDesc::cudnnTensorDescriptor_t,
                                                        format::cudnnTensorFormat_t,
                                                        dataType::cudnnDataType_t,
                                                        nbDims::Cint,
                                                        dimA::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnGetTensorNdDescriptor(tensorDesc, nbDimsRequested, dataType, nbDims,
                                             dimA, strideA)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetTensorNdDescriptor(tensorDesc::cudnnTensorDescriptor_t,
                                                      nbDimsRequested::Cint,
                                                      dataType::Ptr{cudnnDataType_t},
                                                      nbDims::Ptr{Cint}, dimA::Ptr{Cint},
                                                      strideA::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnGetTensorSizeInBytes(tensorDesc, size)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetTensorSizeInBytes(tensorDesc::cudnnTensorDescriptor_t,
                                                     size::Ptr{Csize_t})::cudnnStatus_t
end

@checked function cudnnDestroyTensorDescriptor(tensorDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyTensorDescriptor(tensorDesc::cudnnTensorDescriptor_t)::cudnnStatus_t
end

@cenum cudnnFoldingDirection_t::UInt32 begin
    CUDNN_TRANSFORM_FOLD = 0
    CUDNN_TRANSFORM_UNFOLD = 1
end

@checked function cudnnInitTransformDest(transformDesc, srcDesc, destDesc, destSizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnInitTransformDest(transformDesc::cudnnTensorTransformDescriptor_t,
                                                  srcDesc::cudnnTensorDescriptor_t,
                                                  destDesc::cudnnTensorDescriptor_t,
                                                  destSizeInBytes::Ptr{Csize_t})::cudnnStatus_t
end

@checked function cudnnCreateTensorTransformDescriptor(transformDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateTensorTransformDescriptor(transformDesc::Ptr{cudnnTensorTransformDescriptor_t})::cudnnStatus_t
end

@checked function cudnnSetTensorTransformDescriptor(transformDesc, nbDims, destFormat,
                                                    padBeforeA, padAfterA, foldA, direction)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetTensorTransformDescriptor(transformDesc::cudnnTensorTransformDescriptor_t,
                                                             nbDims::UInt32,
                                                             destFormat::cudnnTensorFormat_t,
                                                             padBeforeA::Ptr{Int32},
                                                             padAfterA::Ptr{Int32},
                                                             foldA::Ptr{UInt32},
                                                             direction::cudnnFoldingDirection_t)::cudnnStatus_t
end

@checked function cudnnGetTensorTransformDescriptor(transformDesc, nbDimsRequested,
                                                    destFormat, padBeforeA, padAfterA,
                                                    foldA, direction)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetTensorTransformDescriptor(transformDesc::cudnnTensorTransformDescriptor_t,
                                                             nbDimsRequested::UInt32,
                                                             destFormat::Ptr{cudnnTensorFormat_t},
                                                             padBeforeA::Ptr{Int32},
                                                             padAfterA::Ptr{Int32},
                                                             foldA::Ptr{UInt32},
                                                             direction::Ptr{cudnnFoldingDirection_t})::cudnnStatus_t
end

@checked function cudnnDestroyTensorTransformDescriptor(transformDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyTensorTransformDescriptor(transformDesc::cudnnTensorTransformDescriptor_t)::cudnnStatus_t
end

@checked function cudnnTransformTensor(handle, alpha, xDesc, x, beta, yDesc, y)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnTransformTensor(handle::cudnnHandle_t, alpha::Ptr{Cvoid},
                                                xDesc::cudnnTensorDescriptor_t,
                                                x::Ptr{Cvoid}, beta::Ptr{Cvoid},
                                                yDesc::cudnnTensorDescriptor_t,
                                                y::Ptr{Cvoid})::cudnnStatus_t
end

@checked function cudnnTransformTensorEx(handle, transDesc, alpha, srcDesc, srcData, beta,
                                         destDesc, destData)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnTransformTensorEx(handle::cudnnHandle_t,
                                                  transDesc::cudnnTensorTransformDescriptor_t,
                                                  alpha::Ptr{Cvoid},
                                                  srcDesc::cudnnTensorDescriptor_t,
                                                  srcData::Ptr{Cvoid}, beta::Ptr{Cvoid},
                                                  destDesc::cudnnTensorDescriptor_t,
                                                  destData::Ptr{Cvoid})::cudnnStatus_t
end

@checked function cudnnAddTensor(handle, alpha, aDesc, A, beta, cDesc, C)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnAddTensor(handle::cudnnHandle_t, alpha::Ptr{Cvoid},
                                          aDesc::cudnnTensorDescriptor_t, A::CuPtr{Cvoid},
                                          beta::Ptr{Cvoid}, cDesc::cudnnTensorDescriptor_t,
                                          C::CuPtr{Cvoid})::cudnnStatus_t
end

@cenum cudnnOpTensorOp_t::UInt32 begin
    CUDNN_OP_TENSOR_ADD = 0
    CUDNN_OP_TENSOR_MUL = 1
    CUDNN_OP_TENSOR_MIN = 2
    CUDNN_OP_TENSOR_MAX = 3
    CUDNN_OP_TENSOR_SQRT = 4
    CUDNN_OP_TENSOR_NOT = 5
end

@checked function cudnnCreateOpTensorDescriptor(opTensorDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateOpTensorDescriptor(opTensorDesc::Ptr{cudnnOpTensorDescriptor_t})::cudnnStatus_t
end

@checked function cudnnSetOpTensorDescriptor(opTensorDesc, opTensorOp, opTensorCompType,
                                             opTensorNanOpt)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetOpTensorDescriptor(opTensorDesc::cudnnOpTensorDescriptor_t,
                                                      opTensorOp::cudnnOpTensorOp_t,
                                                      opTensorCompType::cudnnDataType_t,
                                                      opTensorNanOpt::cudnnNanPropagation_t)::cudnnStatus_t
end

@checked function cudnnGetOpTensorDescriptor(opTensorDesc, opTensorOp, opTensorCompType,
                                             opTensorNanOpt)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetOpTensorDescriptor(opTensorDesc::cudnnOpTensorDescriptor_t,
                                                      opTensorOp::Ptr{cudnnOpTensorOp_t},
                                                      opTensorCompType::Ptr{cudnnDataType_t},
                                                      opTensorNanOpt::Ptr{cudnnNanPropagation_t})::cudnnStatus_t
end

@checked function cudnnDestroyOpTensorDescriptor(opTensorDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyOpTensorDescriptor(opTensorDesc::cudnnOpTensorDescriptor_t)::cudnnStatus_t
end

@checked function cudnnOpTensor(handle, opTensorDesc, alpha1, aDesc, A, alpha2, bDesc, B,
                                beta, cDesc, C)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnOpTensor(handle::cudnnHandle_t,
                                         opTensorDesc::cudnnOpTensorDescriptor_t,
                                         alpha1::Ptr{Cvoid}, aDesc::cudnnTensorDescriptor_t,
                                         A::CuPtr{Cvoid}, alpha2::Ptr{Cvoid},
                                         bDesc::cudnnTensorDescriptor_t, B::CuPtr{Cvoid},
                                         beta::Ptr{Cvoid}, cDesc::cudnnTensorDescriptor_t,
                                         C::CuPtr{Cvoid})::cudnnStatus_t
end

@cenum cudnnReduceTensorIndices_t::UInt32 begin
    CUDNN_REDUCE_TENSOR_NO_INDICES = 0
    CUDNN_REDUCE_TENSOR_FLATTENED_INDICES = 1
end

@cenum cudnnIndicesType_t::UInt32 begin
    CUDNN_32BIT_INDICES = 0
    CUDNN_64BIT_INDICES = 1
    CUDNN_16BIT_INDICES = 2
    CUDNN_8BIT_INDICES = 3
end

@checked function cudnnCreateReduceTensorDescriptor(reduceTensorDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateReduceTensorDescriptor(reduceTensorDesc::Ptr{cudnnReduceTensorDescriptor_t})::cudnnStatus_t
end

@checked function cudnnSetReduceTensorDescriptor(reduceTensorDesc, reduceTensorOp,
                                                 reduceTensorCompType, reduceTensorNanOpt,
                                                 reduceTensorIndices,
                                                 reduceTensorIndicesType)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetReduceTensorDescriptor(reduceTensorDesc::cudnnReduceTensorDescriptor_t,
                                                          reduceTensorOp::cudnnReduceTensorOp_t,
                                                          reduceTensorCompType::cudnnDataType_t,
                                                          reduceTensorNanOpt::cudnnNanPropagation_t,
                                                          reduceTensorIndices::cudnnReduceTensorIndices_t,
                                                          reduceTensorIndicesType::cudnnIndicesType_t)::cudnnStatus_t
end

@checked function cudnnGetReduceTensorDescriptor(reduceTensorDesc, reduceTensorOp,
                                                 reduceTensorCompType, reduceTensorNanOpt,
                                                 reduceTensorIndices,
                                                 reduceTensorIndicesType)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetReduceTensorDescriptor(reduceTensorDesc::cudnnReduceTensorDescriptor_t,
                                                          reduceTensorOp::Ptr{cudnnReduceTensorOp_t},
                                                          reduceTensorCompType::Ptr{cudnnDataType_t},
                                                          reduceTensorNanOpt::Ptr{cudnnNanPropagation_t},
                                                          reduceTensorIndices::Ptr{cudnnReduceTensorIndices_t},
                                                          reduceTensorIndicesType::Ptr{cudnnIndicesType_t})::cudnnStatus_t
end

@checked function cudnnDestroyReduceTensorDescriptor(reduceTensorDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyReduceTensorDescriptor(reduceTensorDesc::cudnnReduceTensorDescriptor_t)::cudnnStatus_t
end

@checked function cudnnGetReductionIndicesSize(handle, reduceTensorDesc, aDesc, cDesc,
                                               sizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetReductionIndicesSize(handle::cudnnHandle_t,
                                                        reduceTensorDesc::cudnnReduceTensorDescriptor_t,
                                                        aDesc::cudnnTensorDescriptor_t,
                                                        cDesc::cudnnTensorDescriptor_t,
                                                        sizeInBytes::Ptr{Csize_t})::cudnnStatus_t
end

@checked function cudnnGetReductionWorkspaceSize(handle, reduceTensorDesc, aDesc, cDesc,
                                                 sizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetReductionWorkspaceSize(handle::cudnnHandle_t,
                                                          reduceTensorDesc::cudnnReduceTensorDescriptor_t,
                                                          aDesc::cudnnTensorDescriptor_t,
                                                          cDesc::cudnnTensorDescriptor_t,
                                                          sizeInBytes::Ref{Csize_t})::cudnnStatus_t
end

@checked function cudnnReduceTensor(handle, reduceTensorDesc, indices, indicesSizeInBytes,
                                    workspace, workspaceSizeInBytes, alpha, aDesc, A, beta,
                                    cDesc, C)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnReduceTensor(handle::cudnnHandle_t,
                                             reduceTensorDesc::cudnnReduceTensorDescriptor_t,
                                             indices::Ptr{Cvoid},
                                             indicesSizeInBytes::Csize_t,
                                             workspace::CuPtr{Cvoid},
                                             workspaceSizeInBytes::Csize_t,
                                             alpha::Ptr{Cvoid},
                                             aDesc::cudnnTensorDescriptor_t,
                                             A::CuPtr{Cvoid}, beta::Ptr{Cvoid},
                                             cDesc::cudnnTensorDescriptor_t,
                                             C::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnSetTensor(handle, yDesc, y, valuePtr)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetTensor(handle::cudnnHandle_t,
                                          yDesc::cudnnTensorDescriptor_t, y::CuPtr{Cvoid},
                                          valuePtr::Ptr{Cvoid})::cudnnStatus_t
end

@checked function cudnnScaleTensor(handle, yDesc, y, alpha)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnScaleTensor(handle::cudnnHandle_t,
                                            yDesc::cudnnTensorDescriptor_t, y::CuPtr{Cvoid},
                                            alpha::Ptr{Cvoid})::cudnnStatus_t
end

@checked function cudnnCreateFilterDescriptor(filterDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateFilterDescriptor(filterDesc::Ptr{cudnnFilterDescriptor_t})::cudnnStatus_t
end

@checked function cudnnSetFilter4dDescriptor(filterDesc, dataType, format, k, c, h, w)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetFilter4dDescriptor(filterDesc::cudnnFilterDescriptor_t,
                                                      dataType::cudnnDataType_t,
                                                      format::cudnnTensorFormat_t, k::Cint,
                                                      c::Cint, h::Cint,
                                                      w::Cint)::cudnnStatus_t
end

@checked function cudnnGetFilter4dDescriptor(filterDesc, dataType, format, k, c, h, w)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetFilter4dDescriptor(filterDesc::cudnnFilterDescriptor_t,
                                                      dataType::Ptr{cudnnDataType_t},
                                                      format::Ptr{cudnnTensorFormat_t},
                                                      k::Ptr{Cint}, c::Ptr{Cint},
                                                      h::Ptr{Cint},
                                                      w::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnSetFilterNdDescriptor(filterDesc, dataType, format, nbDims,
                                             filterDimA)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetFilterNdDescriptor(filterDesc::cudnnFilterDescriptor_t,
                                                      dataType::cudnnDataType_t,
                                                      format::cudnnTensorFormat_t,
                                                      nbDims::Cint,
                                                      filterDimA::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnGetFilterNdDescriptor(filterDesc, nbDimsRequested, dataType, format,
                                             nbDims, filterDimA)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetFilterNdDescriptor(filterDesc::cudnnFilterDescriptor_t,
                                                      nbDimsRequested::Cint,
                                                      dataType::Ptr{cudnnDataType_t},
                                                      format::Ptr{cudnnTensorFormat_t},
                                                      nbDims::Ptr{Cint},
                                                      filterDimA::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnGetFilterSizeInBytes(filterDesc, size)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetFilterSizeInBytes(filterDesc::cudnnFilterDescriptor_t,
                                                     size::Ptr{Csize_t})::cudnnStatus_t
end

@checked function cudnnTransformFilter(handle, transDesc, alpha, srcDesc, srcData, beta,
                                       destDesc, destData)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnTransformFilter(handle::cudnnHandle_t,
                                                transDesc::cudnnTensorTransformDescriptor_t,
                                                alpha::Ptr{Cvoid},
                                                srcDesc::cudnnFilterDescriptor_t,
                                                srcData::CuPtr{Cvoid}, beta::Ptr{Cvoid},
                                                destDesc::cudnnFilterDescriptor_t,
                                                destData::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnDestroyFilterDescriptor(filterDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyFilterDescriptor(filterDesc::cudnnFilterDescriptor_t)::cudnnStatus_t
end

@cenum cudnnSoftmaxAlgorithm_t::UInt32 begin
    CUDNN_SOFTMAX_FAST = 0
    CUDNN_SOFTMAX_ACCURATE = 1
    CUDNN_SOFTMAX_LOG = 2
end

@cenum cudnnSoftmaxMode_t::UInt32 begin
    CUDNN_SOFTMAX_MODE_INSTANCE = 0
    CUDNN_SOFTMAX_MODE_CHANNEL = 1
end

@checked function cudnnSoftmaxForward(handle, algo, mode, alpha, xDesc, x, beta, yDesc, y)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSoftmaxForward(handle::cudnnHandle_t,
                                               algo::cudnnSoftmaxAlgorithm_t,
                                               mode::cudnnSoftmaxMode_t, alpha::Ptr{Cvoid},
                                               xDesc::cudnnTensorDescriptor_t,
                                               x::CuPtr{Cvoid}, beta::Ptr{Cvoid},
                                               yDesc::cudnnTensorDescriptor_t,
                                               y::CuPtr{Cvoid})::cudnnStatus_t
end

@cenum cudnnPoolingMode_t::UInt32 begin
    CUDNN_POOLING_MAX = 0
    CUDNN_POOLING_AVERAGE_COUNT_INCLUDE_PADDING = 1
    CUDNN_POOLING_AVERAGE_COUNT_EXCLUDE_PADDING = 2
    CUDNN_POOLING_MAX_DETERMINISTIC = 3
end

@checked function cudnnCreatePoolingDescriptor(poolingDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreatePoolingDescriptor(poolingDesc::Ptr{cudnnPoolingDescriptor_t})::cudnnStatus_t
end

@checked function cudnnSetPooling2dDescriptor(poolingDesc, mode, maxpoolingNanOpt,
                                              windowHeight, windowWidth, verticalPadding,
                                              horizontalPadding, verticalStride,
                                              horizontalStride)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetPooling2dDescriptor(poolingDesc::cudnnPoolingDescriptor_t,
                                                       mode::cudnnPoolingMode_t,
                                                       maxpoolingNanOpt::cudnnNanPropagation_t,
                                                       windowHeight::Cint,
                                                       windowWidth::Cint,
                                                       verticalPadding::Cint,
                                                       horizontalPadding::Cint,
                                                       verticalStride::Cint,
                                                       horizontalStride::Cint)::cudnnStatus_t
end

@checked function cudnnGetPooling2dDescriptor(poolingDesc, mode, maxpoolingNanOpt,
                                              windowHeight, windowWidth, verticalPadding,
                                              horizontalPadding, verticalStride,
                                              horizontalStride)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetPooling2dDescriptor(poolingDesc::cudnnPoolingDescriptor_t,
                                                       mode::Ptr{cudnnPoolingMode_t},
                                                       maxpoolingNanOpt::Ptr{cudnnNanPropagation_t},
                                                       windowHeight::Ptr{Cint},
                                                       windowWidth::Ptr{Cint},
                                                       verticalPadding::Ptr{Cint},
                                                       horizontalPadding::Ptr{Cint},
                                                       verticalStride::Ptr{Cint},
                                                       horizontalStride::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnSetPoolingNdDescriptor(poolingDesc, mode, maxpoolingNanOpt, nbDims,
                                              windowDimA, paddingA, strideA)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetPoolingNdDescriptor(poolingDesc::cudnnPoolingDescriptor_t,
                                                       mode::cudnnPoolingMode_t,
                                                       maxpoolingNanOpt::cudnnNanPropagation_t,
                                                       nbDims::Cint, windowDimA::Ptr{Cint},
                                                       paddingA::Ptr{Cint},
                                                       strideA::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnGetPoolingNdDescriptor(poolingDesc, nbDimsRequested, mode,
                                              maxpoolingNanOpt, nbDims, windowDimA,
                                              paddingA, strideA)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetPoolingNdDescriptor(poolingDesc::cudnnPoolingDescriptor_t,
                                                       nbDimsRequested::Cint,
                                                       mode::Ptr{cudnnPoolingMode_t},
                                                       maxpoolingNanOpt::Ptr{cudnnNanPropagation_t},
                                                       nbDims::Ptr{Cint},
                                                       windowDimA::Ptr{Cint},
                                                       paddingA::Ptr{Cint},
                                                       strideA::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnGetPoolingNdForwardOutputDim(poolingDesc, inputTensorDesc, nbDims,
                                                    outputTensorDimA)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetPoolingNdForwardOutputDim(poolingDesc::cudnnPoolingDescriptor_t,
                                                             inputTensorDesc::cudnnTensorDescriptor_t,
                                                             nbDims::Cint,
                                                             outputTensorDimA::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnGetPooling2dForwardOutputDim(poolingDesc, inputTensorDesc, n, c, h,
                                                    w)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetPooling2dForwardOutputDim(poolingDesc::cudnnPoolingDescriptor_t,
                                                             inputTensorDesc::cudnnTensorDescriptor_t,
                                                             n::Ptr{Cint}, c::Ptr{Cint},
                                                             h::Ptr{Cint},
                                                             w::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnDestroyPoolingDescriptor(poolingDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyPoolingDescriptor(poolingDesc::cudnnPoolingDescriptor_t)::cudnnStatus_t
end

@checked function cudnnPoolingForward(handle, poolingDesc, alpha, xDesc, x, beta, yDesc, y)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnPoolingForward(handle::cudnnHandle_t,
                                               poolingDesc::cudnnPoolingDescriptor_t,
                                               alpha::Ptr{Cvoid},
                                               xDesc::cudnnTensorDescriptor_t,
                                               x::CuPtr{Cvoid}, beta::Ptr{Cvoid},
                                               yDesc::cudnnTensorDescriptor_t,
                                               y::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnCreateActivationDescriptor(activationDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateActivationDescriptor(activationDesc::Ptr{cudnnActivationDescriptor_t})::cudnnStatus_t
end

@checked function cudnnSetActivationDescriptor(activationDesc, mode, reluNanOpt, coef)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetActivationDescriptor(activationDesc::cudnnActivationDescriptor_t,
                                                        mode::cudnnActivationMode_t,
                                                        reluNanOpt::cudnnNanPropagation_t,
                                                        coef::Cdouble)::cudnnStatus_t
end

@checked function cudnnGetActivationDescriptor(activationDesc, mode, reluNanOpt, coef)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetActivationDescriptor(activationDesc::cudnnActivationDescriptor_t,
                                                        mode::Ptr{cudnnActivationMode_t},
                                                        reluNanOpt::Ptr{cudnnNanPropagation_t},
                                                        coef::Ptr{Cdouble})::cudnnStatus_t
end

@checked function cudnnSetActivationDescriptorSwishBeta(activationDesc, swish_beta)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetActivationDescriptorSwishBeta(activationDesc::cudnnActivationDescriptor_t,
                                                                 swish_beta::Cdouble)::cudnnStatus_t
end

@checked function cudnnGetActivationDescriptorSwishBeta(activationDesc, swish_beta)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetActivationDescriptorSwishBeta(activationDesc::cudnnActivationDescriptor_t,
                                                                 swish_beta::Ptr{Cdouble})::cudnnStatus_t
end

@checked function cudnnDestroyActivationDescriptor(activationDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyActivationDescriptor(activationDesc::cudnnActivationDescriptor_t)::cudnnStatus_t
end

@checked function cudnnActivationForward(handle, activationDesc, alpha, xDesc, x, beta,
                                         yDesc, y)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnActivationForward(handle::cudnnHandle_t,
                                                  activationDesc::cudnnActivationDescriptor_t,
                                                  alpha::Ptr{Cvoid},
                                                  xDesc::cudnnTensorDescriptor_t,
                                                  x::CuPtr{Cvoid}, beta::Ptr{Cvoid},
                                                  yDesc::cudnnTensorDescriptor_t,
                                                  y::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnCreateLRNDescriptor(normDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateLRNDescriptor(normDesc::Ptr{cudnnLRNDescriptor_t})::cudnnStatus_t
end

@cenum cudnnLRNMode_t::UInt32 begin
    CUDNN_LRN_CROSS_CHANNEL_DIM1 = 0
end

@checked function cudnnSetLRNDescriptor(normDesc, lrnN, lrnAlpha, lrnBeta, lrnK)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetLRNDescriptor(normDesc::cudnnLRNDescriptor_t,
                                                 lrnN::Cuint, lrnAlpha::Cdouble,
                                                 lrnBeta::Cdouble,
                                                 lrnK::Cdouble)::cudnnStatus_t
end

@checked function cudnnGetLRNDescriptor(normDesc, lrnN, lrnAlpha, lrnBeta, lrnK)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetLRNDescriptor(normDesc::cudnnLRNDescriptor_t,
                                                 lrnN::Ptr{Cuint}, lrnAlpha::Ptr{Cdouble},
                                                 lrnBeta::Ptr{Cdouble},
                                                 lrnK::Ptr{Cdouble})::cudnnStatus_t
end

@checked function cudnnDestroyLRNDescriptor(lrnDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyLRNDescriptor(lrnDesc::cudnnLRNDescriptor_t)::cudnnStatus_t
end

@checked function cudnnLRNCrossChannelForward(handle, normDesc, lrnMode, alpha, xDesc, x,
                                              beta, yDesc, y)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnLRNCrossChannelForward(handle::cudnnHandle_t,
                                                       normDesc::cudnnLRNDescriptor_t,
                                                       lrnMode::cudnnLRNMode_t,
                                                       alpha::Ptr{Cvoid},
                                                       xDesc::cudnnTensorDescriptor_t,
                                                       x::CuPtr{Cvoid}, beta::Ptr{Cvoid},
                                                       yDesc::cudnnTensorDescriptor_t,
                                                       y::CuPtr{Cvoid})::cudnnStatus_t
end

@cenum cudnnDivNormMode_t::UInt32 begin
    CUDNN_DIVNORM_PRECOMPUTED_MEANS = 0
end

@checked function cudnnDivisiveNormalizationForward(handle, normDesc, mode, alpha, xDesc, x,
                                                    means, temp, temp2, beta, yDesc, y)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDivisiveNormalizationForward(handle::cudnnHandle_t,
                                                             normDesc::cudnnLRNDescriptor_t,
                                                             mode::cudnnDivNormMode_t,
                                                             alpha::Ptr{Cvoid},
                                                             xDesc::cudnnTensorDescriptor_t,
                                                             x::CuPtr{Cvoid},
                                                             means::CuPtr{Cvoid},
                                                             temp::CuPtr{Cvoid},
                                                             temp2::CuPtr{Cvoid},
                                                             beta::Ptr{Cvoid},
                                                             yDesc::cudnnTensorDescriptor_t,
                                                             y::CuPtr{Cvoid})::cudnnStatus_t
end

@cenum cudnnBatchNormMode_t::UInt32 begin
    CUDNN_BATCHNORM_PER_ACTIVATION = 0
    CUDNN_BATCHNORM_SPATIAL = 1
    CUDNN_BATCHNORM_SPATIAL_PERSISTENT = 2
end

@checked function cudnnDeriveBNTensorDescriptor(derivedBnDesc, xDesc, mode)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDeriveBNTensorDescriptor(derivedBnDesc::cudnnTensorDescriptor_t,
                                                         xDesc::cudnnTensorDescriptor_t,
                                                         mode::cudnnBatchNormMode_t)::cudnnStatus_t
end

@cenum cudnnBatchNormOps_t::UInt32 begin
    CUDNN_BATCHNORM_OPS_BN = 0
    CUDNN_BATCHNORM_OPS_BN_ACTIVATION = 1
    CUDNN_BATCHNORM_OPS_BN_ADD_ACTIVATION = 2
end

@checked function cudnnBatchNormalizationForwardInference(handle, mode, alpha, beta, xDesc,
                                                          x, yDesc, y,
                                                          bnScaleBiasMeanVarDesc, bnScale,
                                                          bnBias, estimatedMean,
                                                          estimatedVariance, epsilon)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnBatchNormalizationForwardInference(handle::cudnnHandle_t,
                                                                   mode::cudnnBatchNormMode_t,
                                                                   alpha::Ptr{Cvoid},
                                                                   beta::Ptr{Cvoid},
                                                                   xDesc::cudnnTensorDescriptor_t,
                                                                   x::CuPtr{Cvoid},
                                                                   yDesc::cudnnTensorDescriptor_t,
                                                                   y::CuPtr{Cvoid},
                                                                   bnScaleBiasMeanVarDesc::cudnnTensorDescriptor_t,
                                                                   bnScale::CuPtr{Cvoid},
                                                                   bnBias::CuPtr{Cvoid},
                                                                   estimatedMean::CuPtr{Cvoid},
                                                                   estimatedVariance::CuPtr{Cvoid},
                                                                   epsilon::Cdouble)::cudnnStatus_t
end

@cenum cudnnNormMode_t::UInt32 begin
    CUDNN_NORM_PER_ACTIVATION = 0
    CUDNN_NORM_PER_CHANNEL = 1
end

@cenum cudnnNormAlgo_t::UInt32 begin
    CUDNN_NORM_ALGO_STANDARD = 0
    CUDNN_NORM_ALGO_PERSIST = 1
end

@checked function cudnnDeriveNormTensorDescriptor(derivedNormScaleBiasDesc,
                                                  derivedNormMeanVarDesc, xDesc, mode,
                                                  groupCnt)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDeriveNormTensorDescriptor(derivedNormScaleBiasDesc::cudnnTensorDescriptor_t,
                                                           derivedNormMeanVarDesc::cudnnTensorDescriptor_t,
                                                           xDesc::cudnnTensorDescriptor_t,
                                                           mode::cudnnNormMode_t,
                                                           groupCnt::Cint)::cudnnStatus_t
end

@cenum cudnnNormOps_t::UInt32 begin
    CUDNN_NORM_OPS_NORM = 0
    CUDNN_NORM_OPS_NORM_ACTIVATION = 1
    CUDNN_NORM_OPS_NORM_ADD_ACTIVATION = 2
end

@checked function cudnnNormalizationForwardInference(handle, mode, normOps, algo, alpha,
                                                     beta, xDesc, x, normScaleBiasDesc,
                                                     normScale, normBias, normMeanVarDesc,
                                                     estimatedMean, estimatedVariance,
                                                     zDesc, z, activationDesc, yDesc, y,
                                                     epsilon, groupCnt)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnNormalizationForwardInference(handle::cudnnHandle_t,
                                                              mode::cudnnNormMode_t,
                                                              normOps::cudnnNormOps_t,
                                                              algo::cudnnNormAlgo_t,
                                                              alpha::Ptr{Cvoid},
                                                              beta::Ptr{Cvoid},
                                                              xDesc::cudnnTensorDescriptor_t,
                                                              x::CuPtr{Cvoid},
                                                              normScaleBiasDesc::cudnnTensorDescriptor_t,
                                                              normScale::CuPtr{Cvoid},
                                                              normBias::CuPtr{Cvoid},
                                                              normMeanVarDesc::cudnnTensorDescriptor_t,
                                                              estimatedMean::CuPtr{Cvoid},
                                                              estimatedVariance::CuPtr{Cvoid},
                                                              zDesc::cudnnTensorDescriptor_t,
                                                              z::CuPtr{Cvoid},
                                                              activationDesc::cudnnActivationDescriptor_t,
                                                              yDesc::cudnnTensorDescriptor_t,
                                                              y::CuPtr{Cvoid},
                                                              epsilon::Cdouble,
                                                              groupCnt::Cint)::cudnnStatus_t
end

@cenum cudnnSamplerType_t::UInt32 begin
    CUDNN_SAMPLER_BILINEAR = 0
end

@checked function cudnnCreateSpatialTransformerDescriptor(stDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateSpatialTransformerDescriptor(stDesc::Ptr{cudnnSpatialTransformerDescriptor_t})::cudnnStatus_t
end

@checked function cudnnSetSpatialTransformerNdDescriptor(stDesc, samplerType, dataType,
                                                         nbDims, dimA)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetSpatialTransformerNdDescriptor(stDesc::cudnnSpatialTransformerDescriptor_t,
                                                                  samplerType::cudnnSamplerType_t,
                                                                  dataType::cudnnDataType_t,
                                                                  nbDims::Cint,
                                                                  dimA::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnDestroySpatialTransformerDescriptor(stDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroySpatialTransformerDescriptor(stDesc::cudnnSpatialTransformerDescriptor_t)::cudnnStatus_t
end

@checked function cudnnSpatialTfGridGeneratorForward(handle, stDesc, theta, grid)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSpatialTfGridGeneratorForward(handle::cudnnHandle_t,
                                                              stDesc::cudnnSpatialTransformerDescriptor_t,
                                                              theta::CuPtr{Cvoid},
                                                              grid::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnSpatialTfSamplerForward(handle, stDesc, alpha, xDesc, x, grid, beta,
                                               yDesc, y)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSpatialTfSamplerForward(handle::cudnnHandle_t,
                                                        stDesc::cudnnSpatialTransformerDescriptor_t,
                                                        alpha::Ptr{Cvoid},
                                                        xDesc::cudnnTensorDescriptor_t,
                                                        x::CuPtr{Cvoid}, grid::CuPtr{Cvoid},
                                                        beta::Ptr{Cvoid},
                                                        yDesc::cudnnTensorDescriptor_t,
                                                        y::CuPtr{Cvoid})::cudnnStatus_t
end

mutable struct cudnnDropoutStruct end

const cudnnDropoutDescriptor_t = Ptr{cudnnDropoutStruct}

@checked function cudnnCreateDropoutDescriptor(dropoutDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateDropoutDescriptor(dropoutDesc::Ptr{cudnnDropoutDescriptor_t})::cudnnStatus_t
end

@checked function cudnnDestroyDropoutDescriptor(dropoutDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyDropoutDescriptor(dropoutDesc::cudnnDropoutDescriptor_t)::cudnnStatus_t
end

@checked function cudnnDropoutGetStatesSize(handle, sizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDropoutGetStatesSize(handle::cudnnHandle_t,
                                                     sizeInBytes::Ptr{Csize_t})::cudnnStatus_t
end

@checked function cudnnDropoutGetReserveSpaceSize(xdesc, sizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDropoutGetReserveSpaceSize(xdesc::cudnnTensorDescriptor_t,
                                                           sizeInBytes::Ref{Csize_t})::cudnnStatus_t
end

@checked function cudnnSetDropoutDescriptor(dropoutDesc, handle, dropout, states,
                                            stateSizeInBytes, seed)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetDropoutDescriptor(dropoutDesc::cudnnDropoutDescriptor_t,
                                                     handle::cudnnHandle_t, dropout::Cfloat,
                                                     states::CuPtr{Cvoid},
                                                     stateSizeInBytes::Csize_t,
                                                     seed::Culonglong)::cudnnStatus_t
end

@checked function cudnnRestoreDropoutDescriptor(dropoutDesc, handle, dropout, states,
                                                stateSizeInBytes, seed)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnRestoreDropoutDescriptor(dropoutDesc::cudnnDropoutDescriptor_t,
                                                         handle::cudnnHandle_t,
                                                         dropout::Cfloat,
                                                         states::CuPtr{Cvoid},
                                                         stateSizeInBytes::Csize_t,
                                                         seed::Culonglong)::cudnnStatus_t
end

@checked function cudnnGetDropoutDescriptor(dropoutDesc, handle, dropout, states, seed)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetDropoutDescriptor(dropoutDesc::cudnnDropoutDescriptor_t,
                                                     handle::cudnnHandle_t,
                                                     dropout::Ptr{Cfloat},
                                                     states::Ptr{CuPtr{Cvoid}},
                                                     seed::Ptr{Culonglong})::cudnnStatus_t
end

@checked function cudnnDropoutForward(handle, dropoutDesc, xdesc, x, ydesc, y, reserveSpace,
                                      reserveSpaceSizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDropoutForward(handle::cudnnHandle_t,
                                               dropoutDesc::cudnnDropoutDescriptor_t,
                                               xdesc::cudnnTensorDescriptor_t,
                                               x::CuPtr{Cvoid},
                                               ydesc::cudnnTensorDescriptor_t,
                                               y::CuPtr{Cvoid}, reserveSpace::CuPtr{Cvoid},
                                               reserveSpaceSizeInBytes::Csize_t)::cudnnStatus_t
end

@cenum cudnnConvolutionFwdAlgo_t::UInt32 begin
    CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_GEMM = 0
    CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM = 1
    CUDNN_CONVOLUTION_FWD_ALGO_GEMM = 2
    CUDNN_CONVOLUTION_FWD_ALGO_DIRECT = 3
    CUDNN_CONVOLUTION_FWD_ALGO_FFT = 4
    CUDNN_CONVOLUTION_FWD_ALGO_FFT_TILING = 5
    CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD = 6
    CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD_NONFUSED = 7
    CUDNN_CONVOLUTION_FWD_ALGO_COUNT = 8
end

@cenum cudnnConvolutionBwdFilterAlgo_t::UInt32 begin
    CUDNN_CONVOLUTION_BWD_FILTER_ALGO_0 = 0
    CUDNN_CONVOLUTION_BWD_FILTER_ALGO_1 = 1
    CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT = 2
    CUDNN_CONVOLUTION_BWD_FILTER_ALGO_3 = 3
    CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD = 4
    CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD_NONFUSED = 5
    CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT_TILING = 6
    CUDNN_CONVOLUTION_BWD_FILTER_ALGO_COUNT = 7
end

@cenum cudnnConvolutionBwdDataAlgo_t::UInt32 begin
    CUDNN_CONVOLUTION_BWD_DATA_ALGO_0 = 0
    CUDNN_CONVOLUTION_BWD_DATA_ALGO_1 = 1
    CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT = 2
    CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT_TILING = 3
    CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD = 4
    CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD_NONFUSED = 5
    CUDNN_CONVOLUTION_BWD_DATA_ALGO_COUNT = 6
end

@cenum cudnnCTCLossAlgo_t::UInt32 begin
    CUDNN_CTC_LOSS_ALGO_DETERMINISTIC = 0
    CUDNN_CTC_LOSS_ALGO_NON_DETERMINISTIC = 1
end

@checked function cudnnOpsVersionCheck()
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnOpsVersionCheck()::cudnnStatus_t
end

@checked function cudnnSoftmaxBackward(handle, algo, mode, alpha, yDesc, y, dyDesc, dy,
                                       beta, dxDesc, dx)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSoftmaxBackward(handle::cudnnHandle_t,
                                                algo::cudnnSoftmaxAlgorithm_t,
                                                mode::cudnnSoftmaxMode_t, alpha::Ptr{Cvoid},
                                                yDesc::cudnnTensorDescriptor_t,
                                                y::CuPtr{Cvoid},
                                                dyDesc::cudnnTensorDescriptor_t,
                                                dy::CuPtr{Cvoid}, beta::Ptr{Cvoid},
                                                dxDesc::cudnnTensorDescriptor_t,
                                                dx::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnPoolingBackward(handle, poolingDesc, alpha, yDesc, y, dyDesc, dy,
                                       xDesc, x, beta, dxDesc, dx)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnPoolingBackward(handle::cudnnHandle_t,
                                                poolingDesc::cudnnPoolingDescriptor_t,
                                                alpha::Ptr{Cvoid},
                                                yDesc::cudnnTensorDescriptor_t,
                                                y::CuPtr{Cvoid},
                                                dyDesc::cudnnTensorDescriptor_t,
                                                dy::CuPtr{Cvoid},
                                                xDesc::cudnnTensorDescriptor_t,
                                                x::CuPtr{Cvoid}, beta::Ptr{Cvoid},
                                                dxDesc::cudnnTensorDescriptor_t,
                                                dx::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnActivationBackward(handle, activationDesc, alpha, yDesc, y, dyDesc,
                                          dy, xDesc, x, beta, dxDesc, dx)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnActivationBackward(handle::cudnnHandle_t,
                                                   activationDesc::cudnnActivationDescriptor_t,
                                                   alpha::Ptr{Cvoid},
                                                   yDesc::cudnnTensorDescriptor_t,
                                                   y::CuPtr{Cvoid},
                                                   dyDesc::cudnnTensorDescriptor_t,
                                                   dy::CuPtr{Cvoid},
                                                   xDesc::cudnnTensorDescriptor_t,
                                                   x::CuPtr{Cvoid}, beta::Ptr{Cvoid},
                                                   dxDesc::cudnnTensorDescriptor_t,
                                                   dx::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnLRNCrossChannelBackward(handle, normDesc, lrnMode, alpha, yDesc, y,
                                               dyDesc, dy, xDesc, x, beta, dxDesc, dx)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnLRNCrossChannelBackward(handle::cudnnHandle_t,
                                                        normDesc::cudnnLRNDescriptor_t,
                                                        lrnMode::cudnnLRNMode_t,
                                                        alpha::Ptr{Cvoid},
                                                        yDesc::cudnnTensorDescriptor_t,
                                                        y::CuPtr{Cvoid},
                                                        dyDesc::cudnnTensorDescriptor_t,
                                                        dy::CuPtr{Cvoid},
                                                        xDesc::cudnnTensorDescriptor_t,
                                                        x::CuPtr{Cvoid}, beta::Ptr{Cvoid},
                                                        dxDesc::cudnnTensorDescriptor_t,
                                                        dx::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnDivisiveNormalizationBackward(handle, normDesc, mode, alpha, xDesc,
                                                     x, means, dy, temp, temp2, beta,
                                                     dXdMeansDesc, dx, dMeans)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDivisiveNormalizationBackward(handle::cudnnHandle_t,
                                                              normDesc::cudnnLRNDescriptor_t,
                                                              mode::cudnnDivNormMode_t,
                                                              alpha::Ptr{Cvoid},
                                                              xDesc::cudnnTensorDescriptor_t,
                                                              x::CuPtr{Cvoid},
                                                              means::CuPtr{Cvoid},
                                                              dy::CuPtr{Cvoid},
                                                              temp::CuPtr{Cvoid},
                                                              temp2::CuPtr{Cvoid},
                                                              beta::Ptr{Cvoid},
                                                              dXdMeansDesc::cudnnTensorDescriptor_t,
                                                              dx::CuPtr{Cvoid},
                                                              dMeans::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnGetBatchNormalizationForwardTrainingExWorkspaceSize(handle, mode,
                                                                           bnOps, xDesc,
                                                                           zDesc, yDesc,
                                                                           bnScaleBiasMeanVarDesc,
                                                                           activationDesc,
                                                                           sizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetBatchNormalizationForwardTrainingExWorkspaceSize(handle::cudnnHandle_t,
                                                                                    mode::cudnnBatchNormMode_t,
                                                                                    bnOps::cudnnBatchNormOps_t,
                                                                                    xDesc::cudnnTensorDescriptor_t,
                                                                                    zDesc::cudnnTensorDescriptor_t,
                                                                                    yDesc::cudnnTensorDescriptor_t,
                                                                                    bnScaleBiasMeanVarDesc::cudnnTensorDescriptor_t,
                                                                                    activationDesc::cudnnActivationDescriptor_t,
                                                                                    sizeInBytes::Ref{Csize_t})::cudnnStatus_t
end

@checked function cudnnGetBatchNormalizationBackwardExWorkspaceSize(handle, mode, bnOps,
                                                                    xDesc, yDesc, dyDesc,
                                                                    dzDesc, dxDesc,
                                                                    dBnScaleBiasDesc,
                                                                    activationDesc,
                                                                    sizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetBatchNormalizationBackwardExWorkspaceSize(handle::cudnnHandle_t,
                                                                             mode::cudnnBatchNormMode_t,
                                                                             bnOps::cudnnBatchNormOps_t,
                                                                             xDesc::cudnnTensorDescriptor_t,
                                                                             yDesc::cudnnTensorDescriptor_t,
                                                                             dyDesc::cudnnTensorDescriptor_t,
                                                                             dzDesc::cudnnTensorDescriptor_t,
                                                                             dxDesc::cudnnTensorDescriptor_t,
                                                                             dBnScaleBiasDesc::cudnnTensorDescriptor_t,
                                                                             activationDesc::cudnnActivationDescriptor_t,
                                                                             sizeInBytes::Ref{Csize_t})::cudnnStatus_t
end

@checked function cudnnGetBatchNormalizationTrainingExReserveSpaceSize(handle, mode, bnOps,
                                                                       activationDesc,
                                                                       xDesc, sizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetBatchNormalizationTrainingExReserveSpaceSize(handle::cudnnHandle_t,
                                                                                mode::cudnnBatchNormMode_t,
                                                                                bnOps::cudnnBatchNormOps_t,
                                                                                activationDesc::cudnnActivationDescriptor_t,
                                                                                xDesc::cudnnTensorDescriptor_t,
                                                                                sizeInBytes::Ref{Csize_t})::cudnnStatus_t
end

@checked function cudnnBatchNormalizationForwardTraining(handle, mode, alpha, beta, xDesc,
                                                         x, yDesc, y,
                                                         bnScaleBiasMeanVarDesc, bnScale,
                                                         bnBias, exponentialAverageFactor,
                                                         resultRunningMean,
                                                         resultRunningVariance, epsilon,
                                                         resultSaveMean,
                                                         resultSaveInvVariance)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnBatchNormalizationForwardTraining(handle::cudnnHandle_t,
                                                                  mode::cudnnBatchNormMode_t,
                                                                  alpha::Ptr{Cvoid},
                                                                  beta::Ptr{Cvoid},
                                                                  xDesc::cudnnTensorDescriptor_t,
                                                                  x::CuPtr{Cvoid},
                                                                  yDesc::cudnnTensorDescriptor_t,
                                                                  y::CuPtr{Cvoid},
                                                                  bnScaleBiasMeanVarDesc::cudnnTensorDescriptor_t,
                                                                  bnScale::CuPtr{Cvoid},
                                                                  bnBias::CuPtr{Cvoid},
                                                                  exponentialAverageFactor::Cdouble,
                                                                  resultRunningMean::CuPtr{Cvoid},
                                                                  resultRunningVariance::CuPtr{Cvoid},
                                                                  epsilon::Cdouble,
                                                                  resultSaveMean::CuPtr{Cvoid},
                                                                  resultSaveInvVariance::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnBatchNormalizationForwardTrainingEx(handle, mode, bnOps, alpha, beta,
                                                           xDesc, xData, zDesc, zData,
                                                           yDesc, yData,
                                                           bnScaleBiasMeanVarDesc, bnScale,
                                                           bnBias, exponentialAverageFactor,
                                                           resultRunningMean,
                                                           resultRunningVariance, epsilon,
                                                           resultSaveMean,
                                                           resultSaveInvVariance,
                                                           activationDesc, workspace,
                                                           workSpaceSizeInBytes,
                                                           reserveSpace,
                                                           reserveSpaceSizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnBatchNormalizationForwardTrainingEx(handle::cudnnHandle_t,
                                                                    mode::cudnnBatchNormMode_t,
                                                                    bnOps::cudnnBatchNormOps_t,
                                                                    alpha::Ptr{Cvoid},
                                                                    beta::Ptr{Cvoid},
                                                                    xDesc::cudnnTensorDescriptor_t,
                                                                    xData::CuPtr{Cvoid},
                                                                    zDesc::cudnnTensorDescriptor_t,
                                                                    zData::CuPtr{Cvoid},
                                                                    yDesc::cudnnTensorDescriptor_t,
                                                                    yData::CuPtr{Cvoid},
                                                                    bnScaleBiasMeanVarDesc::cudnnTensorDescriptor_t,
                                                                    bnScale::CuPtr{Cvoid},
                                                                    bnBias::CuPtr{Cvoid},
                                                                    exponentialAverageFactor::Cdouble,
                                                                    resultRunningMean::CuPtr{Cvoid},
                                                                    resultRunningVariance::CuPtr{Cvoid},
                                                                    epsilon::Cdouble,
                                                                    resultSaveMean::CuPtr{Cvoid},
                                                                    resultSaveInvVariance::CuPtr{Cvoid},
                                                                    activationDesc::cudnnActivationDescriptor_t,
                                                                    workspace::CuPtr{Cvoid},
                                                                    workSpaceSizeInBytes::Csize_t,
                                                                    reserveSpace::CuPtr{Cvoid},
                                                                    reserveSpaceSizeInBytes::Csize_t)::cudnnStatus_t
end

@checked function cudnnBatchNormalizationBackward(handle, mode, alphaDataDiff, betaDataDiff,
                                                  alphaParamDiff, betaParamDiff, xDesc, x,
                                                  dyDesc, dy, dxDesc, dx, dBnScaleBiasDesc,
                                                  bnScale, dBnScaleResult, dBnBiasResult,
                                                  epsilon, savedMean, savedInvVariance)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnBatchNormalizationBackward(handle::cudnnHandle_t,
                                                           mode::cudnnBatchNormMode_t,
                                                           alphaDataDiff::Ptr{Cvoid},
                                                           betaDataDiff::Ptr{Cvoid},
                                                           alphaParamDiff::Ptr{Cvoid},
                                                           betaParamDiff::Ptr{Cvoid},
                                                           xDesc::cudnnTensorDescriptor_t,
                                                           x::CuPtr{Cvoid},
                                                           dyDesc::cudnnTensorDescriptor_t,
                                                           dy::CuPtr{Cvoid},
                                                           dxDesc::cudnnTensorDescriptor_t,
                                                           dx::CuPtr{Cvoid},
                                                           dBnScaleBiasDesc::cudnnTensorDescriptor_t,
                                                           bnScale::CuPtr{Cvoid},
                                                           dBnScaleResult::CuPtr{Cvoid},
                                                           dBnBiasResult::CuPtr{Cvoid},
                                                           epsilon::Cdouble,
                                                           savedMean::CuPtr{Cvoid},
                                                           savedInvVariance::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnBatchNormalizationBackwardEx(handle, mode, bnOps, alphaDataDiff,
                                                    betaDataDiff, alphaParamDiff,
                                                    betaParamDiff, xDesc, xData, yDesc,
                                                    yData, dyDesc, dyData, dzDesc, dzData,
                                                    dxDesc, dxData, dBnScaleBiasDesc,
                                                    bnScaleData, bnBiasData, dBnScaleData,
                                                    dBnBiasData, epsilon, savedMean,
                                                    savedInvVariance, activationDesc,
                                                    workSpace, workSpaceSizeInBytes,
                                                    reserveSpace, reserveSpaceSizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnBatchNormalizationBackwardEx(handle::cudnnHandle_t,
                                                             mode::cudnnBatchNormMode_t,
                                                             bnOps::cudnnBatchNormOps_t,
                                                             alphaDataDiff::Ptr{Cvoid},
                                                             betaDataDiff::Ptr{Cvoid},
                                                             alphaParamDiff::Ptr{Cvoid},
                                                             betaParamDiff::Ptr{Cvoid},
                                                             xDesc::cudnnTensorDescriptor_t,
                                                             xData::CuPtr{Cvoid},
                                                             yDesc::cudnnTensorDescriptor_t,
                                                             yData::CuPtr{Cvoid},
                                                             dyDesc::cudnnTensorDescriptor_t,
                                                             dyData::CuPtr{Cvoid},
                                                             dzDesc::cudnnTensorDescriptor_t,
                                                             dzData::CuPtr{Cvoid},
                                                             dxDesc::cudnnTensorDescriptor_t,
                                                             dxData::CuPtr{Cvoid},
                                                             dBnScaleBiasDesc::cudnnTensorDescriptor_t,
                                                             bnScaleData::CuPtr{Cvoid},
                                                             bnBiasData::CuPtr{Cvoid},
                                                             dBnScaleData::CuPtr{Cvoid},
                                                             dBnBiasData::CuPtr{Cvoid},
                                                             epsilon::Cdouble,
                                                             savedMean::CuPtr{Cvoid},
                                                             savedInvVariance::CuPtr{Cvoid},
                                                             activationDesc::cudnnActivationDescriptor_t,
                                                             workSpace::CuPtr{Cvoid},
                                                             workSpaceSizeInBytes::Csize_t,
                                                             reserveSpace::CuPtr{Cvoid},
                                                             reserveSpaceSizeInBytes::Csize_t)::cudnnStatus_t
end

@checked function cudnnGetNormalizationForwardTrainingWorkspaceSize(handle, mode, normOps,
                                                                    algo, xDesc, zDesc,
                                                                    yDesc,
                                                                    normScaleBiasDesc,
                                                                    activationDesc,
                                                                    normMeanVarDesc,
                                                                    sizeInBytes, groupCnt)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetNormalizationForwardTrainingWorkspaceSize(handle::cudnnHandle_t,
                                                                             mode::cudnnNormMode_t,
                                                                             normOps::cudnnNormOps_t,
                                                                             algo::cudnnNormAlgo_t,
                                                                             xDesc::cudnnTensorDescriptor_t,
                                                                             zDesc::cudnnTensorDescriptor_t,
                                                                             yDesc::cudnnTensorDescriptor_t,
                                                                             normScaleBiasDesc::cudnnTensorDescriptor_t,
                                                                             activationDesc::cudnnActivationDescriptor_t,
                                                                             normMeanVarDesc::cudnnTensorDescriptor_t,
                                                                             sizeInBytes::Ref{Csize_t},
                                                                             groupCnt::Cint)::cudnnStatus_t
end

@checked function cudnnGetNormalizationBackwardWorkspaceSize(handle, mode, normOps, algo,
                                                             xDesc, yDesc, dyDesc, dzDesc,
                                                             dxDesc, dNormScaleBiasDesc,
                                                             activationDesc,
                                                             normMeanVarDesc, sizeInBytes,
                                                             groupCnt)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetNormalizationBackwardWorkspaceSize(handle::cudnnHandle_t,
                                                                      mode::cudnnNormMode_t,
                                                                      normOps::cudnnNormOps_t,
                                                                      algo::cudnnNormAlgo_t,
                                                                      xDesc::cudnnTensorDescriptor_t,
                                                                      yDesc::cudnnTensorDescriptor_t,
                                                                      dyDesc::cudnnTensorDescriptor_t,
                                                                      dzDesc::cudnnTensorDescriptor_t,
                                                                      dxDesc::cudnnTensorDescriptor_t,
                                                                      dNormScaleBiasDesc::cudnnTensorDescriptor_t,
                                                                      activationDesc::cudnnActivationDescriptor_t,
                                                                      normMeanVarDesc::cudnnTensorDescriptor_t,
                                                                      sizeInBytes::Ref{Csize_t},
                                                                      groupCnt::Cint)::cudnnStatus_t
end

@checked function cudnnGetNormalizationTrainingReserveSpaceSize(handle, mode, normOps, algo,
                                                                activationDesc, xDesc,
                                                                sizeInBytes, groupCnt)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetNormalizationTrainingReserveSpaceSize(handle::cudnnHandle_t,
                                                                         mode::cudnnNormMode_t,
                                                                         normOps::cudnnNormOps_t,
                                                                         algo::cudnnNormAlgo_t,
                                                                         activationDesc::cudnnActivationDescriptor_t,
                                                                         xDesc::cudnnTensorDescriptor_t,
                                                                         sizeInBytes::Ref{Csize_t},
                                                                         groupCnt::Cint)::cudnnStatus_t
end

@checked function cudnnNormalizationForwardTraining(handle, mode, normOps, algo, alpha,
                                                    beta, xDesc, xData, normScaleBiasDesc,
                                                    normScale, normBias,
                                                    exponentialAverageFactor,
                                                    normMeanVarDesc, resultRunningMean,
                                                    resultRunningVariance, epsilon,
                                                    resultSaveMean, resultSaveInvVariance,
                                                    activationDesc, zDesc, zData, yDesc,
                                                    yData, workspace, workSpaceSizeInBytes,
                                                    reserveSpace, reserveSpaceSizeInBytes,
                                                    groupCnt)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnNormalizationForwardTraining(handle::cudnnHandle_t,
                                                             mode::cudnnNormMode_t,
                                                             normOps::cudnnNormOps_t,
                                                             algo::cudnnNormAlgo_t,
                                                             alpha::Ptr{Cvoid},
                                                             beta::Ptr{Cvoid},
                                                             xDesc::cudnnTensorDescriptor_t,
                                                             xData::CuPtr{Cvoid},
                                                             normScaleBiasDesc::cudnnTensorDescriptor_t,
                                                             normScale::CuPtr{Cvoid},
                                                             normBias::CuPtr{Cvoid},
                                                             exponentialAverageFactor::Cdouble,
                                                             normMeanVarDesc::cudnnTensorDescriptor_t,
                                                             resultRunningMean::CuPtr{Cvoid},
                                                             resultRunningVariance::CuPtr{Cvoid},
                                                             epsilon::Cdouble,
                                                             resultSaveMean::CuPtr{Cvoid},
                                                             resultSaveInvVariance::CuPtr{Cvoid},
                                                             activationDesc::cudnnActivationDescriptor_t,
                                                             zDesc::cudnnTensorDescriptor_t,
                                                             zData::CuPtr{Cvoid},
                                                             yDesc::cudnnTensorDescriptor_t,
                                                             yData::CuPtr{Cvoid},
                                                             workspace::CuPtr{Cvoid},
                                                             workSpaceSizeInBytes::Csize_t,
                                                             reserveSpace::CuPtr{Cvoid},
                                                             reserveSpaceSizeInBytes::Csize_t,
                                                             groupCnt::Cint)::cudnnStatus_t
end

@checked function cudnnNormalizationBackward(handle, mode, normOps, algo, alphaDataDiff,
                                             betaDataDiff, alphaParamDiff, betaParamDiff,
                                             xDesc, xData, yDesc, yData, dyDesc, dyData,
                                             dzDesc, dzData, dxDesc, dxData,
                                             dNormScaleBiasDesc, normScaleData,
                                             normBiasData, dNormScaleData, dNormBiasData,
                                             epsilon, normMeanVarDesc, savedMean,
                                             savedInvVariance, activationDesc, workSpace,
                                             workSpaceSizeInBytes, reserveSpace,
                                             reserveSpaceSizeInBytes, groupCnt)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnNormalizationBackward(handle::cudnnHandle_t,
                                                      mode::cudnnNormMode_t,
                                                      normOps::cudnnNormOps_t,
                                                      algo::cudnnNormAlgo_t,
                                                      alphaDataDiff::Ptr{Cvoid},
                                                      betaDataDiff::Ptr{Cvoid},
                                                      alphaParamDiff::Ptr{Cvoid},
                                                      betaParamDiff::Ptr{Cvoid},
                                                      xDesc::cudnnTensorDescriptor_t,
                                                      xData::CuPtr{Cvoid},
                                                      yDesc::cudnnTensorDescriptor_t,
                                                      yData::CuPtr{Cvoid},
                                                      dyDesc::cudnnTensorDescriptor_t,
                                                      dyData::CuPtr{Cvoid},
                                                      dzDesc::cudnnTensorDescriptor_t,
                                                      dzData::CuPtr{Cvoid},
                                                      dxDesc::cudnnTensorDescriptor_t,
                                                      dxData::CuPtr{Cvoid},
                                                      dNormScaleBiasDesc::cudnnTensorDescriptor_t,
                                                      normScaleData::CuPtr{Cvoid},
                                                      normBiasData::CuPtr{Cvoid},
                                                      dNormScaleData::CuPtr{Cvoid},
                                                      dNormBiasData::CuPtr{Cvoid},
                                                      epsilon::Cdouble,
                                                      normMeanVarDesc::cudnnTensorDescriptor_t,
                                                      savedMean::CuPtr{Cvoid},
                                                      savedInvVariance::CuPtr{Cvoid},
                                                      activationDesc::cudnnActivationDescriptor_t,
                                                      workSpace::CuPtr{Cvoid},
                                                      workSpaceSizeInBytes::Csize_t,
                                                      reserveSpace::CuPtr{Cvoid},
                                                      reserveSpaceSizeInBytes::Csize_t,
                                                      groupCnt::Cint)::cudnnStatus_t
end

@checked function cudnnSpatialTfGridGeneratorBackward(handle, stDesc, dgrid, dtheta)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSpatialTfGridGeneratorBackward(handle::cudnnHandle_t,
                                                               stDesc::cudnnSpatialTransformerDescriptor_t,
                                                               dgrid::CuPtr{Cvoid},
                                                               dtheta::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnSpatialTfSamplerBackward(handle, stDesc, alpha, xDesc, x, beta,
                                                dxDesc, dx, alphaDgrid, dyDesc, dy, grid,
                                                betaDgrid, dgrid)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSpatialTfSamplerBackward(handle::cudnnHandle_t,
                                                         stDesc::cudnnSpatialTransformerDescriptor_t,
                                                         alpha::Ptr{Cvoid},
                                                         xDesc::cudnnTensorDescriptor_t,
                                                         x::CuPtr{Cvoid}, beta::Ptr{Cvoid},
                                                         dxDesc::cudnnTensorDescriptor_t,
                                                         dx::CuPtr{Cvoid},
                                                         alphaDgrid::Ptr{Cvoid},
                                                         dyDesc::cudnnTensorDescriptor_t,
                                                         dy::CuPtr{Cvoid},
                                                         grid::CuPtr{Cvoid},
                                                         betaDgrid::Ptr{Cvoid},
                                                         dgrid::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnDropoutBackward(handle, dropoutDesc, dydesc, dy, dxdesc, dx,
                                       reserveSpace, reserveSpaceSizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDropoutBackward(handle::cudnnHandle_t,
                                                dropoutDesc::cudnnDropoutDescriptor_t,
                                                dydesc::cudnnTensorDescriptor_t,
                                                dy::CuPtr{Cvoid},
                                                dxdesc::cudnnTensorDescriptor_t,
                                                dx::CuPtr{Cvoid},
                                                reserveSpace::CuPtr{Cvoid},
                                                reserveSpaceSizeInBytes::Csize_t)::cudnnStatus_t
end

@cenum cudnnRNNAlgo_t::UInt32 begin
    CUDNN_RNN_ALGO_STANDARD = 0
    CUDNN_RNN_ALGO_PERSIST_STATIC = 1
    CUDNN_RNN_ALGO_PERSIST_DYNAMIC = 2
    CUDNN_RNN_ALGO_PERSIST_STATIC_SMALL_H = 3
    CUDNN_RNN_ALGO_COUNT = 4
end

@cenum cudnnForwardMode_t::UInt32 begin
    CUDNN_FWD_MODE_INFERENCE = 0
    CUDNN_FWD_MODE_TRAINING = 1
end

@cenum cudnnRNNMode_t::UInt32 begin
    CUDNN_RNN_RELU = 0
    CUDNN_RNN_TANH = 1
    CUDNN_LSTM = 2
    CUDNN_GRU = 3
end

@cenum cudnnRNNBiasMode_t::UInt32 begin
    CUDNN_RNN_NO_BIAS = 0
    CUDNN_RNN_SINGLE_INP_BIAS = 1
    CUDNN_RNN_DOUBLE_BIAS = 2
    CUDNN_RNN_SINGLE_REC_BIAS = 3
end

@cenum cudnnDirectionMode_t::UInt32 begin
    CUDNN_UNIDIRECTIONAL = 0
    CUDNN_BIDIRECTIONAL = 1
end

@cenum cudnnRNNInputMode_t::UInt32 begin
    CUDNN_LINEAR_INPUT = 0
    CUDNN_SKIP_INPUT = 1
end

@cenum cudnnRNNClipMode_t::UInt32 begin
    CUDNN_RNN_CLIP_NONE = 0
    CUDNN_RNN_CLIP_MINMAX = 1
end

@cenum cudnnRNNDataLayout_t::UInt32 begin
    CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_UNPACKED = 0
    CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_PACKED = 1
    CUDNN_RNN_DATA_LAYOUT_BATCH_MAJOR_UNPACKED = 2
end

mutable struct cudnnRNNStruct end

const cudnnRNNDescriptor_t = Ptr{cudnnRNNStruct}

mutable struct cudnnRNNDataStruct end

const cudnnRNNDataDescriptor_t = Ptr{cudnnRNNDataStruct}

@checked function cudnnCreateRNNDescriptor(rnnDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateRNNDescriptor(rnnDesc::Ptr{cudnnRNNDescriptor_t})::cudnnStatus_t
end

@checked function cudnnDestroyRNNDescriptor(rnnDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyRNNDescriptor(rnnDesc::cudnnRNNDescriptor_t)::cudnnStatus_t
end

@checked function cudnnSetRNNDescriptor_v8(rnnDesc, algo, cellMode, biasMode, dirMode,
                                           inputMode, dataType, mathPrec, mathType,
                                           inputSize, hiddenSize, projSize, numLayers,
                                           dropoutDesc, auxFlags)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetRNNDescriptor_v8(rnnDesc::cudnnRNNDescriptor_t,
                                                    algo::cudnnRNNAlgo_t,
                                                    cellMode::cudnnRNNMode_t,
                                                    biasMode::cudnnRNNBiasMode_t,
                                                    dirMode::cudnnDirectionMode_t,
                                                    inputMode::cudnnRNNInputMode_t,
                                                    dataType::cudnnDataType_t,
                                                    mathPrec::cudnnDataType_t,
                                                    mathType::cudnnMathType_t,
                                                    inputSize::Int32, hiddenSize::Int32,
                                                    projSize::Int32, numLayers::Int32,
                                                    dropoutDesc::cudnnDropoutDescriptor_t,
                                                    auxFlags::UInt32)::cudnnStatus_t
end

@checked function cudnnGetRNNDescriptor_v8(rnnDesc, algo, cellMode, biasMode, dirMode,
                                           inputMode, dataType, mathPrec, mathType,
                                           inputSize, hiddenSize, projSize, numLayers,
                                           dropoutDesc, auxFlags)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetRNNDescriptor_v8(rnnDesc::cudnnRNNDescriptor_t,
                                                    algo::Ref{cudnnRNNAlgo_t},
                                                    cellMode::Ref{cudnnRNNMode_t},
                                                    biasMode::Ref{cudnnRNNBiasMode_t},
                                                    dirMode::Ref{cudnnDirectionMode_t},
                                                    inputMode::Ref{cudnnRNNInputMode_t},
                                                    dataType::Ref{cudnnDataType_t},
                                                    mathPrec::Ref{cudnnDataType_t},
                                                    mathType::Ref{cudnnMathType_t},
                                                    inputSize::Ref{Int32},
                                                    hiddenSize::Ref{Int32},
                                                    projSize::Ref{Int32},
                                                    numLayers::Ref{Int32},
                                                    dropoutDesc::Ref{cudnnDropoutDescriptor_t},
                                                    auxFlags::Ref{UInt32})::cudnnStatus_t
end

@checked function cudnnRNNSetClip_v8(rnnDesc, clipMode, clipNanOpt, lclip, rclip)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnRNNSetClip_v8(rnnDesc::cudnnRNNDescriptor_t,
                                              clipMode::cudnnRNNClipMode_t,
                                              clipNanOpt::cudnnNanPropagation_t,
                                              lclip::Cdouble, rclip::Cdouble)::cudnnStatus_t
end

@checked function cudnnRNNSetClip_v9(rnnDesc, clipMode, lclip, rclip)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnRNNSetClip_v9(rnnDesc::cudnnRNNDescriptor_t,
                                              clipMode::cudnnRNNClipMode_t, lclip::Cdouble,
                                              rclip::Cdouble)::cudnnStatus_t
end

@checked function cudnnRNNGetClip_v8(rnnDesc, clipMode, clipNanOpt, lclip, rclip)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnRNNGetClip_v8(rnnDesc::cudnnRNNDescriptor_t,
                                              clipMode::Ref{cudnnRNNClipMode_t},
                                              clipNanOpt::Ref{cudnnNanPropagation_t},
                                              lclip::Ref{Cdouble},
                                              rclip::Ref{Cdouble})::cudnnStatus_t
end

@checked function cudnnRNNGetClip_v9(rnnDesc, clipMode, lclip, rclip)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnRNNGetClip_v9(rnnDesc::cudnnRNNDescriptor_t,
                                              clipMode::Ptr{cudnnRNNClipMode_t},
                                              lclip::Ptr{Cdouble},
                                              rclip::Ptr{Cdouble})::cudnnStatus_t
end

@checked function cudnnBuildRNNDynamic(handle, rnnDesc, miniBatch)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnBuildRNNDynamic(handle::cudnnHandle_t,
                                                rnnDesc::cudnnRNNDescriptor_t,
                                                miniBatch::Cint)::cudnnStatus_t
end

@checked function cudnnGetRNNTempSpaceSizes(handle, rnnDesc, fwdMode, xDesc, workSpaceSize,
                                            reserveSpaceSize)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetRNNTempSpaceSizes(handle::cudnnHandle_t,
                                                     rnnDesc::cudnnRNNDescriptor_t,
                                                     fwdMode::cudnnForwardMode_t,
                                                     xDesc::cudnnRNNDataDescriptor_t,
                                                     workSpaceSize::Ref{Csize_t},
                                                     reserveSpaceSize::Ref{Csize_t})::cudnnStatus_t
end

@checked function cudnnGetRNNWeightSpaceSize(handle, rnnDesc, weightSpaceSize)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetRNNWeightSpaceSize(handle::cudnnHandle_t,
                                                      rnnDesc::cudnnRNNDescriptor_t,
                                                      weightSpaceSize::Ref{Csize_t})::cudnnStatus_t
end

@checked function cudnnGetRNNWeightParams(handle, rnnDesc, pseudoLayer, weightSpaceSize,
                                          weightSpace, linLayerID, mDesc, mAddr, bDesc,
                                          bAddr)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetRNNWeightParams(handle::cudnnHandle_t,
                                                   rnnDesc::cudnnRNNDescriptor_t,
                                                   pseudoLayer::Int32,
                                                   weightSpaceSize::Csize_t,
                                                   weightSpace::CuPtr{Cvoid},
                                                   linLayerID::Int32,
                                                   mDesc::cudnnTensorDescriptor_t,
                                                   mAddr::Ptr{CuPtr{Cvoid}},
                                                   bDesc::cudnnTensorDescriptor_t,
                                                   bAddr::Ptr{CuPtr{Cvoid}})::cudnnStatus_t
end

@checked function cudnnCreateRNNDataDescriptor(rnnDataDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateRNNDataDescriptor(rnnDataDesc::Ptr{cudnnRNNDataDescriptor_t})::cudnnStatus_t
end

@checked function cudnnDestroyRNNDataDescriptor(rnnDataDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyRNNDataDescriptor(rnnDataDesc::cudnnRNNDataDescriptor_t)::cudnnStatus_t
end

@checked function cudnnSetRNNDataDescriptor(rnnDataDesc, dataType, layout, maxSeqLength,
                                            batchSize, vectorSize, seqLengthArray,
                                            paddingFill)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetRNNDataDescriptor(rnnDataDesc::cudnnRNNDataDescriptor_t,
                                                     dataType::cudnnDataType_t,
                                                     layout::cudnnRNNDataLayout_t,
                                                     maxSeqLength::Cint, batchSize::Cint,
                                                     vectorSize::Cint,
                                                     seqLengthArray::Ptr{Cint},
                                                     paddingFill::Ptr{Cvoid})::cudnnStatus_t
end

@checked function cudnnGetRNNDataDescriptor(rnnDataDesc, dataType, layout, maxSeqLength,
                                            batchSize, vectorSize, arrayLengthRequested,
                                            seqLengthArray, paddingFill)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetRNNDataDescriptor(rnnDataDesc::cudnnRNNDataDescriptor_t,
                                                     dataType::Ptr{cudnnDataType_t},
                                                     layout::Ptr{cudnnRNNDataLayout_t},
                                                     maxSeqLength::Ptr{Cint},
                                                     batchSize::Ptr{Cint},
                                                     vectorSize::Ptr{Cint},
                                                     arrayLengthRequested::Cint,
                                                     seqLengthArray::Ptr{Cint},
                                                     paddingFill::Ptr{Cvoid})::cudnnStatus_t
end

@checked function cudnnRNNForward(handle, rnnDesc, fwdMode, devSeqLengths, xDesc, x, yDesc,
                                  y, hDesc, hx, hy, cDesc, cx, cy, weightSpaceSize,
                                  weightSpace, workSpaceSize, workSpace, reserveSpaceSize,
                                  reserveSpace)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnRNNForward(handle::cudnnHandle_t,
                                           rnnDesc::cudnnRNNDescriptor_t,
                                           fwdMode::cudnnForwardMode_t,
                                           devSeqLengths::CuPtr{Int32},
                                           xDesc::cudnnRNNDataDescriptor_t, x::CuPtr{Cvoid},
                                           yDesc::cudnnRNNDataDescriptor_t, y::CuPtr{Cvoid},
                                           hDesc::cudnnTensorDescriptor_t, hx::CuPtr{Cvoid},
                                           hy::CuPtr{Cvoid}, cDesc::cudnnTensorDescriptor_t,
                                           cx::CuPtr{Cvoid}, cy::CuPtr{Cvoid},
                                           weightSpaceSize::Csize_t,
                                           weightSpace::CuPtr{Cvoid},
                                           workSpaceSize::Csize_t, workSpace::CuPtr{Cvoid},
                                           reserveSpaceSize::Csize_t,
                                           reserveSpace::CuPtr{Cvoid})::cudnnStatus_t
end

@cenum cudnnSeqDataAxis_t::UInt32 begin
    CUDNN_SEQDATA_TIME_DIM = 0
    CUDNN_SEQDATA_BATCH_DIM = 1
    CUDNN_SEQDATA_BEAM_DIM = 2
    CUDNN_SEQDATA_VECT_DIM = 3
end

mutable struct cudnnSeqDataStruct end

const cudnnSeqDataDescriptor_t = Ptr{cudnnSeqDataStruct}

@checked function cudnnCreateSeqDataDescriptor(seqDataDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateSeqDataDescriptor(seqDataDesc::Ptr{cudnnSeqDataDescriptor_t})::cudnnStatus_t
end

@checked function cudnnDestroySeqDataDescriptor(seqDataDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroySeqDataDescriptor(seqDataDesc::cudnnSeqDataDescriptor_t)::cudnnStatus_t
end

@checked function cudnnSetSeqDataDescriptor(seqDataDesc, dataType, nbDims, dimA, axes,
                                            seqLengthArraySize, seqLengthArray, paddingFill)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetSeqDataDescriptor(seqDataDesc::cudnnSeqDataDescriptor_t,
                                                     dataType::cudnnDataType_t,
                                                     nbDims::Cint, dimA::Ptr{Cint},
                                                     axes::Ptr{cudnnSeqDataAxis_t},
                                                     seqLengthArraySize::Csize_t,
                                                     seqLengthArray::Ptr{Cint},
                                                     paddingFill::Ptr{Cvoid})::cudnnStatus_t
end

@checked function cudnnGetSeqDataDescriptor(seqDataDesc, dataType, nbDims, nbDimsRequested,
                                            dimA, axes, seqLengthArraySize,
                                            seqLengthSizeRequested, seqLengthArray,
                                            paddingFill)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetSeqDataDescriptor(seqDataDesc::cudnnSeqDataDescriptor_t,
                                                     dataType::Ptr{cudnnDataType_t},
                                                     nbDims::Ptr{Cint},
                                                     nbDimsRequested::Cint, dimA::Ptr{Cint},
                                                     axes::Ptr{cudnnSeqDataAxis_t},
                                                     seqLengthArraySize::Ptr{Csize_t},
                                                     seqLengthSizeRequested::Csize_t,
                                                     seqLengthArray::Ptr{Cint},
                                                     paddingFill::Ptr{Cvoid})::cudnnStatus_t
end

mutable struct cudnnAttnStruct end

const cudnnAttnDescriptor_t = Ptr{cudnnAttnStruct}

@checked function cudnnCreateAttnDescriptor(attnDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateAttnDescriptor(attnDesc::Ptr{cudnnAttnDescriptor_t})::cudnnStatus_t
end

@checked function cudnnDestroyAttnDescriptor(attnDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyAttnDescriptor(attnDesc::cudnnAttnDescriptor_t)::cudnnStatus_t
end

@checked function cudnnSetAttnDescriptor(attnDesc, attnMode, nHeads, smScaler, dataType,
                                         computePrec, mathType, attnDropoutDesc,
                                         postDropoutDesc, qSize, kSize, vSize, qProjSize,
                                         kProjSize, vProjSize, oProjSize, qoMaxSeqLength,
                                         kvMaxSeqLength, maxBatchSize, maxBeamSize)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetAttnDescriptor(attnDesc::cudnnAttnDescriptor_t,
                                                  attnMode::Cuint, nHeads::Cint,
                                                  smScaler::Cdouble,
                                                  dataType::cudnnDataType_t,
                                                  computePrec::cudnnDataType_t,
                                                  mathType::cudnnMathType_t,
                                                  attnDropoutDesc::cudnnDropoutDescriptor_t,
                                                  postDropoutDesc::cudnnDropoutDescriptor_t,
                                                  qSize::Cint, kSize::Cint, vSize::Cint,
                                                  qProjSize::Cint, kProjSize::Cint,
                                                  vProjSize::Cint, oProjSize::Cint,
                                                  qoMaxSeqLength::Cint,
                                                  kvMaxSeqLength::Cint, maxBatchSize::Cint,
                                                  maxBeamSize::Cint)::cudnnStatus_t
end

@checked function cudnnGetAttnDescriptor(attnDesc, attnMode, nHeads, smScaler, dataType,
                                         computePrec, mathType, attnDropoutDesc,
                                         postDropoutDesc, qSize, kSize, vSize, qProjSize,
                                         kProjSize, vProjSize, oProjSize, qoMaxSeqLength,
                                         kvMaxSeqLength, maxBatchSize, maxBeamSize)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetAttnDescriptor(attnDesc::cudnnAttnDescriptor_t,
                                                  attnMode::Ptr{Cuint}, nHeads::Ptr{Cint},
                                                  smScaler::Ptr{Cdouble},
                                                  dataType::Ptr{cudnnDataType_t},
                                                  computePrec::Ptr{cudnnDataType_t},
                                                  mathType::Ptr{cudnnMathType_t},
                                                  attnDropoutDesc::Ptr{cudnnDropoutDescriptor_t},
                                                  postDropoutDesc::Ptr{cudnnDropoutDescriptor_t},
                                                  qSize::Ptr{Cint}, kSize::Ptr{Cint},
                                                  vSize::Ptr{Cint}, qProjSize::Ptr{Cint},
                                                  kProjSize::Ptr{Cint},
                                                  vProjSize::Ptr{Cint},
                                                  oProjSize::Ptr{Cint},
                                                  qoMaxSeqLength::Ptr{Cint},
                                                  kvMaxSeqLength::Ptr{Cint},
                                                  maxBatchSize::Ptr{Cint},
                                                  maxBeamSize::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnGetMultiHeadAttnBuffers(handle, attnDesc, weightSizeInBytes,
                                               workSpaceSizeInBytes,
                                               reserveSpaceSizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetMultiHeadAttnBuffers(handle::cudnnHandle_t,
                                                        attnDesc::cudnnAttnDescriptor_t,
                                                        weightSizeInBytes::Ptr{Csize_t},
                                                        workSpaceSizeInBytes::Ptr{Csize_t},
                                                        reserveSpaceSizeInBytes::Ptr{Csize_t})::cudnnStatus_t
end

@cenum cudnnMultiHeadAttnWeightKind_t::UInt32 begin
    CUDNN_MH_ATTN_Q_WEIGHTS = 0
    CUDNN_MH_ATTN_K_WEIGHTS = 1
    CUDNN_MH_ATTN_V_WEIGHTS = 2
    CUDNN_MH_ATTN_O_WEIGHTS = 3
    CUDNN_MH_ATTN_Q_BIASES = 4
    CUDNN_MH_ATTN_K_BIASES = 5
    CUDNN_MH_ATTN_V_BIASES = 6
    CUDNN_MH_ATTN_O_BIASES = 7
end

@checked function cudnnGetMultiHeadAttnWeights(handle, attnDesc, wKind, weightSizeInBytes,
                                               weights, wDesc, wAddr)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetMultiHeadAttnWeights(handle::cudnnHandle_t,
                                                        attnDesc::cudnnAttnDescriptor_t,
                                                        wKind::cudnnMultiHeadAttnWeightKind_t,
                                                        weightSizeInBytes::Csize_t,
                                                        weights::CuPtr{Cvoid},
                                                        wDesc::cudnnTensorDescriptor_t,
                                                        wAddr::CuPtr{Ptr{Cvoid}})::cudnnStatus_t
end

@checked function cudnnMultiHeadAttnForward(handle, attnDesc, currIdx, loWinIdx, hiWinIdx,
                                            devSeqLengthsQO, devSeqLengthsKV, qDesc,
                                            queries, residuals, kDesc, keys, vDesc, values,
                                            oDesc, out, weightSizeInBytes, weights,
                                            workSpaceSizeInBytes, workSpace,
                                            reserveSpaceSizeInBytes, reserveSpace)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnMultiHeadAttnForward(handle::cudnnHandle_t,
                                                     attnDesc::cudnnAttnDescriptor_t,
                                                     currIdx::Cint, loWinIdx::Ptr{Cint},
                                                     hiWinIdx::Ptr{Cint},
                                                     devSeqLengthsQO::CuPtr{Cint},
                                                     devSeqLengthsKV::CuPtr{Cint},
                                                     qDesc::cudnnSeqDataDescriptor_t,
                                                     queries::CuPtr{Cvoid},
                                                     residuals::CuPtr{Cvoid},
                                                     kDesc::cudnnSeqDataDescriptor_t,
                                                     keys::CuPtr{Cvoid},
                                                     vDesc::cudnnSeqDataDescriptor_t,
                                                     values::CuPtr{Cvoid},
                                                     oDesc::cudnnSeqDataDescriptor_t,
                                                     out::CuPtr{Cvoid},
                                                     weightSizeInBytes::Csize_t,
                                                     weights::CuPtr{Cvoid},
                                                     workSpaceSizeInBytes::Csize_t,
                                                     workSpace::CuPtr{Cvoid},
                                                     reserveSpaceSizeInBytes::Csize_t,
                                                     reserveSpace::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnAdvVersionCheck()
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnAdvVersionCheck()::cudnnStatus_t
end

@cenum cudnnWgradMode_t::UInt32 begin
    CUDNN_WGRAD_MODE_ADD = 0
    CUDNN_WGRAD_MODE_SET = 1
end

@checked function cudnnRNNBackwardData_v8(handle, rnnDesc, devSeqLengths, yDesc, y, dy,
                                          xDesc, dx, hDesc, hx, dhy, dhx, cDesc, cx, dcy,
                                          dcx, weightSpaceSize, weightSpace, workSpaceSize,
                                          workSpace, reserveSpaceSize, reserveSpace)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnRNNBackwardData_v8(handle::cudnnHandle_t,
                                                   rnnDesc::cudnnRNNDescriptor_t,
                                                   devSeqLengths::CuPtr{Int32},
                                                   yDesc::cudnnRNNDataDescriptor_t,
                                                   y::CuPtr{Cvoid}, dy::CuPtr{Cvoid},
                                                   xDesc::cudnnRNNDataDescriptor_t,
                                                   dx::CuPtr{Cvoid},
                                                   hDesc::cudnnTensorDescriptor_t,
                                                   hx::CuPtr{Cvoid}, dhy::CuPtr{Cvoid},
                                                   dhx::CuPtr{Cvoid},
                                                   cDesc::cudnnTensorDescriptor_t,
                                                   cx::CuPtr{Cvoid}, dcy::CuPtr{Cvoid},
                                                   dcx::CuPtr{Cvoid},
                                                   weightSpaceSize::Csize_t,
                                                   weightSpace::CuPtr{Cvoid},
                                                   workSpaceSize::Csize_t,
                                                   workSpace::CuPtr{Cvoid},
                                                   reserveSpaceSize::Csize_t,
                                                   reserveSpace::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnRNNBackwardWeights_v8(handle, rnnDesc, addGrad, devSeqLengths, xDesc,
                                             x, hDesc, hx, yDesc, y, weightSpaceSize,
                                             dweightSpace, workSpaceSize, workSpace,
                                             reserveSpaceSize, reserveSpace)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnRNNBackwardWeights_v8(handle::cudnnHandle_t,
                                                      rnnDesc::cudnnRNNDescriptor_t,
                                                      addGrad::cudnnWgradMode_t,
                                                      devSeqLengths::CuPtr{Int32},
                                                      xDesc::cudnnRNNDataDescriptor_t,
                                                      x::CuPtr{Cvoid},
                                                      hDesc::cudnnTensorDescriptor_t,
                                                      hx::CuPtr{Cvoid},
                                                      yDesc::cudnnRNNDataDescriptor_t,
                                                      y::CuPtr{Cvoid},
                                                      weightSpaceSize::Csize_t,
                                                      dweightSpace::CuPtr{Cvoid},
                                                      workSpaceSize::Csize_t,
                                                      workSpace::CuPtr{Cvoid},
                                                      reserveSpaceSize::Csize_t,
                                                      reserveSpace::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnMultiHeadAttnBackwardData(handle, attnDesc, loWinIdx, hiWinIdx,
                                                 devSeqLengthsDQDO, devSeqLengthsDKDV,
                                                 doDesc, dout, dqDesc, dqueries, queries,
                                                 dkDesc, dkeys, keys, dvDesc, dvalues,
                                                 values, weightSizeInBytes, weights,
                                                 workSpaceSizeInBytes, workSpace,
                                                 reserveSpaceSizeInBytes, reserveSpace)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnMultiHeadAttnBackwardData(handle::cudnnHandle_t,
                                                          attnDesc::cudnnAttnDescriptor_t,
                                                          loWinIdx::Ptr{Cint},
                                                          hiWinIdx::Ptr{Cint},
                                                          devSeqLengthsDQDO::CuPtr{Cint},
                                                          devSeqLengthsDKDV::CuPtr{Cint},
                                                          doDesc::cudnnSeqDataDescriptor_t,
                                                          dout::CuPtr{Cvoid},
                                                          dqDesc::cudnnSeqDataDescriptor_t,
                                                          dqueries::CuPtr{Cvoid},
                                                          queries::CuPtr{Cvoid},
                                                          dkDesc::cudnnSeqDataDescriptor_t,
                                                          dkeys::CuPtr{Cvoid},
                                                          keys::CuPtr{Cvoid},
                                                          dvDesc::cudnnSeqDataDescriptor_t,
                                                          dvalues::CuPtr{Cvoid},
                                                          values::CuPtr{Cvoid},
                                                          weightSizeInBytes::Csize_t,
                                                          weights::CuPtr{Cvoid},
                                                          workSpaceSizeInBytes::Csize_t,
                                                          workSpace::CuPtr{Cvoid},
                                                          reserveSpaceSizeInBytes::Csize_t,
                                                          reserveSpace::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnMultiHeadAttnBackwardWeights(handle, attnDesc, addGrad, qDesc,
                                                    queries, kDesc, keys, vDesc, values,
                                                    doDesc, dout, weightSizeInBytes,
                                                    weights, dweights, workSpaceSizeInBytes,
                                                    workSpace, reserveSpaceSizeInBytes,
                                                    reserveSpace)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnMultiHeadAttnBackwardWeights(handle::cudnnHandle_t,
                                                             attnDesc::cudnnAttnDescriptor_t,
                                                             addGrad::cudnnWgradMode_t,
                                                             qDesc::cudnnSeqDataDescriptor_t,
                                                             queries::CuPtr{Cvoid},
                                                             kDesc::cudnnSeqDataDescriptor_t,
                                                             keys::CuPtr{Cvoid},
                                                             vDesc::cudnnSeqDataDescriptor_t,
                                                             values::CuPtr{Cvoid},
                                                             doDesc::cudnnSeqDataDescriptor_t,
                                                             dout::CuPtr{Cvoid},
                                                             weightSizeInBytes::Csize_t,
                                                             weights::CuPtr{Cvoid},
                                                             dweights::CuPtr{Cvoid},
                                                             workSpaceSizeInBytes::Csize_t,
                                                             workSpace::CuPtr{Cvoid},
                                                             reserveSpaceSizeInBytes::Csize_t,
                                                             reserveSpace::CuPtr{Cvoid})::cudnnStatus_t
end

@cenum cudnnLossNormalizationMode_t::UInt32 begin
    CUDNN_LOSS_NORMALIZATION_NONE = 0
    CUDNN_LOSS_NORMALIZATION_SOFTMAX = 1
end

@checked function cudnnCreateCTCLossDescriptor(ctcLossDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateCTCLossDescriptor(ctcLossDesc::Ptr{cudnnCTCLossDescriptor_t})::cudnnStatus_t
end

@checked function cudnnSetCTCLossDescriptor(ctcLossDesc, compType)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetCTCLossDescriptor(ctcLossDesc::cudnnCTCLossDescriptor_t,
                                                     compType::cudnnDataType_t)::cudnnStatus_t
end

@checked function cudnnSetCTCLossDescriptorEx(ctcLossDesc, compType, normMode, gradMode)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetCTCLossDescriptorEx(ctcLossDesc::cudnnCTCLossDescriptor_t,
                                                       compType::cudnnDataType_t,
                                                       normMode::cudnnLossNormalizationMode_t,
                                                       gradMode::cudnnNanPropagation_t)::cudnnStatus_t
end

@checked function cudnnSetCTCLossDescriptor_v8(ctcLossDesc, compType, normMode, gradMode,
                                               maxLabelLength)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetCTCLossDescriptor_v8(ctcLossDesc::cudnnCTCLossDescriptor_t,
                                                        compType::cudnnDataType_t,
                                                        normMode::cudnnLossNormalizationMode_t,
                                                        gradMode::cudnnNanPropagation_t,
                                                        maxLabelLength::Cint)::cudnnStatus_t
end

@checked function cudnnSetCTCLossDescriptor_v9(ctcLossDesc, compType, normMode, ctcGradMode,
                                               maxLabelLength)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetCTCLossDescriptor_v9(ctcLossDesc::cudnnCTCLossDescriptor_t,
                                                        compType::cudnnDataType_t,
                                                        normMode::cudnnLossNormalizationMode_t,
                                                        ctcGradMode::cudnnCTCGradMode_t,
                                                        maxLabelLength::Cint)::cudnnStatus_t
end

@checked function cudnnGetCTCLossDescriptor(ctcLossDesc, compType)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetCTCLossDescriptor(ctcLossDesc::cudnnCTCLossDescriptor_t,
                                                     compType::Ptr{cudnnDataType_t})::cudnnStatus_t
end

@checked function cudnnGetCTCLossDescriptorEx(ctcLossDesc, compType, normMode, gradMode)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetCTCLossDescriptorEx(ctcLossDesc::cudnnCTCLossDescriptor_t,
                                                       compType::Ptr{cudnnDataType_t},
                                                       normMode::Ptr{cudnnLossNormalizationMode_t},
                                                       gradMode::Ptr{cudnnNanPropagation_t})::cudnnStatus_t
end

@checked function cudnnGetCTCLossDescriptor_v8(ctcLossDesc, compType, normMode, gradMode,
                                               maxLabelLength)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetCTCLossDescriptor_v8(ctcLossDesc::cudnnCTCLossDescriptor_t,
                                                        compType::Ref{cudnnDataType_t},
                                                        normMode::Ref{cudnnLossNormalizationMode_t},
                                                        gradMode::Ref{cudnnNanPropagation_t},
                                                        maxLabelLength::Ref{Cint})::cudnnStatus_t
end

@checked function cudnnGetCTCLossDescriptor_v9(ctcLossDesc, compType, normMode, ctcGradMode,
                                               maxLabelLength)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetCTCLossDescriptor_v9(ctcLossDesc::cudnnCTCLossDescriptor_t,
                                                        compType::Ptr{cudnnDataType_t},
                                                        normMode::Ptr{cudnnLossNormalizationMode_t},
                                                        ctcGradMode::Ptr{cudnnCTCGradMode_t},
                                                        maxLabelLength::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnDestroyCTCLossDescriptor(ctcLossDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyCTCLossDescriptor(ctcLossDesc::cudnnCTCLossDescriptor_t)::cudnnStatus_t
end

@checked function cudnnCTCLoss(handle, probsDesc, probs, hostLabels, hostLabelLengths,
                               hostInputLengths, costs, gradientsDesc, gradients, algo,
                               ctcLossDesc, workspace, workSpaceSizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCTCLoss(handle::cudnnHandle_t,
                                        probsDesc::cudnnTensorDescriptor_t,
                                        probs::CuPtr{Cvoid}, hostLabels::Ptr{Cint},
                                        hostLabelLengths::Ptr{Cint},
                                        hostInputLengths::Ptr{Cint}, costs::CuPtr{Cvoid},
                                        gradientsDesc::cudnnTensorDescriptor_t,
                                        gradients::CuPtr{Cvoid}, algo::cudnnCTCLossAlgo_t,
                                        ctcLossDesc::cudnnCTCLossDescriptor_t,
                                        workspace::CuPtr{Cvoid},
                                        workSpaceSizeInBytes::Csize_t)::cudnnStatus_t
end

@checked function cudnnCTCLoss_v8(handle, algo, ctcLossDesc, probsDesc, probs, labels,
                                  labelLengths, inputLengths, costs, gradientsDesc,
                                  gradients, workSpaceSizeInBytes, workspace)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCTCLoss_v8(handle::cudnnHandle_t, algo::cudnnCTCLossAlgo_t,
                                           ctcLossDesc::cudnnCTCLossDescriptor_t,
                                           probsDesc::cudnnTensorDescriptor_t,
                                           probs::Ptr{Cvoid}, labels::CuPtr{Cint},
                                           labelLengths::CuPtr{Cint},
                                           inputLengths::CuPtr{Cint}, costs::Ptr{Cvoid},
                                           gradientsDesc::cudnnTensorDescriptor_t,
                                           gradients::Ptr{Cvoid},
                                           workSpaceSizeInBytes::Csize_t,
                                           workspace::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnGetCTCLossWorkspaceSize(handle, probsDesc, gradientsDesc, labels,
                                               labelLengths, inputLengths, algo,
                                               ctcLossDesc, sizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetCTCLossWorkspaceSize(handle::cudnnHandle_t,
                                                        probsDesc::cudnnTensorDescriptor_t,
                                                        gradientsDesc::cudnnTensorDescriptor_t,
                                                        labels::Ptr{Cint},
                                                        labelLengths::Ptr{Cint},
                                                        inputLengths::Ptr{Cint},
                                                        algo::cudnnCTCLossAlgo_t,
                                                        ctcLossDesc::cudnnCTCLossDescriptor_t,
                                                        sizeInBytes::Ref{Csize_t})::cudnnStatus_t
end

@checked function cudnnGetCTCLossWorkspaceSize_v8(handle, algo, ctcLossDesc, probsDesc,
                                                  gradientsDesc, sizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetCTCLossWorkspaceSize_v8(handle::cudnnHandle_t,
                                                           algo::cudnnCTCLossAlgo_t,
                                                           ctcLossDesc::cudnnCTCLossDescriptor_t,
                                                           probsDesc::cudnnTensorDescriptor_t,
                                                           gradientsDesc::cudnnTensorDescriptor_t,
                                                           sizeInBytes::Ref{Csize_t})::cudnnStatus_t
end

mutable struct cudnnConvolutionStruct end

const cudnnConvolutionDescriptor_t = Ptr{cudnnConvolutionStruct}

struct cudnnConvolutionFwdAlgoPerfStruct
    algo::cudnnConvolutionFwdAlgo_t
    status::cudnnStatus_t
    time::Cfloat
    memory::Csize_t
    determinism::cudnnDeterminism_t
    mathType::cudnnMathType_t
    reserved::NTuple{3,Cint}
end

const cudnnConvolutionFwdAlgoPerf_t = cudnnConvolutionFwdAlgoPerfStruct

@checked function cudnnCreateConvolutionDescriptor(convDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateConvolutionDescriptor(convDesc::Ptr{cudnnConvolutionDescriptor_t})::cudnnStatus_t
end

@checked function cudnnDestroyConvolutionDescriptor(convDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyConvolutionDescriptor(convDesc::cudnnConvolutionDescriptor_t)::cudnnStatus_t
end

@checked function cudnnSetConvolutionMathType(convDesc, mathType)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetConvolutionMathType(convDesc::cudnnConvolutionDescriptor_t,
                                                       mathType::cudnnMathType_t)::cudnnStatus_t
end

@checked function cudnnGetConvolutionMathType(convDesc, mathType)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetConvolutionMathType(convDesc::cudnnConvolutionDescriptor_t,
                                                       mathType::Ptr{cudnnMathType_t})::cudnnStatus_t
end

@checked function cudnnSetConvolutionGroupCount(convDesc, groupCount)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetConvolutionGroupCount(convDesc::cudnnConvolutionDescriptor_t,
                                                         groupCount::Cint)::cudnnStatus_t
end

@checked function cudnnGetConvolutionGroupCount(convDesc, groupCount)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetConvolutionGroupCount(convDesc::cudnnConvolutionDescriptor_t,
                                                         groupCount::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnSetConvolutionReorderType(convDesc, reorderType)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetConvolutionReorderType(convDesc::cudnnConvolutionDescriptor_t,
                                                          reorderType::cudnnReorderType_t)::cudnnStatus_t
end

@checked function cudnnGetConvolutionReorderType(convDesc, reorderType)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetConvolutionReorderType(convDesc::cudnnConvolutionDescriptor_t,
                                                          reorderType::Ptr{cudnnReorderType_t})::cudnnStatus_t
end

@checked function cudnnSetConvolution2dDescriptor(convDesc, pad_h, pad_w, u, v, dilation_h,
                                                  dilation_w, mode, computeType)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetConvolution2dDescriptor(convDesc::cudnnConvolutionDescriptor_t,
                                                           pad_h::Cint, pad_w::Cint,
                                                           u::Cint, v::Cint,
                                                           dilation_h::Cint,
                                                           dilation_w::Cint,
                                                           mode::cudnnConvolutionMode_t,
                                                           computeType::cudnnDataType_t)::cudnnStatus_t
end

@checked function cudnnGetConvolution2dDescriptor(convDesc, pad_h, pad_w, u, v, dilation_h,
                                                  dilation_w, mode, computeType)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetConvolution2dDescriptor(convDesc::cudnnConvolutionDescriptor_t,
                                                           pad_h::Ptr{Cint},
                                                           pad_w::Ptr{Cint}, u::Ptr{Cint},
                                                           v::Ptr{Cint},
                                                           dilation_h::Ptr{Cint},
                                                           dilation_w::Ptr{Cint},
                                                           mode::Ptr{cudnnConvolutionMode_t},
                                                           computeType::Ptr{cudnnDataType_t})::cudnnStatus_t
end

@checked function cudnnSetConvolutionNdDescriptor(convDesc, arrayLength, padA,
                                                  filterStrideA, dilationA, mode,
                                                  computeType)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetConvolutionNdDescriptor(convDesc::cudnnConvolutionDescriptor_t,
                                                           arrayLength::Cint,
                                                           padA::Ptr{Cint},
                                                           filterStrideA::Ptr{Cint},
                                                           dilationA::Ptr{Cint},
                                                           mode::cudnnConvolutionMode_t,
                                                           computeType::cudnnDataType_t)::cudnnStatus_t
end

@checked function cudnnGetConvolutionNdDescriptor(convDesc, arrayLengthRequested,
                                                  arrayLength, padA, strideA, dilationA,
                                                  mode, computeType)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetConvolutionNdDescriptor(convDesc::cudnnConvolutionDescriptor_t,
                                                           arrayLengthRequested::Cint,
                                                           arrayLength::Ptr{Cint},
                                                           padA::Ptr{Cint},
                                                           strideA::Ptr{Cint},
                                                           dilationA::Ptr{Cint},
                                                           mode::Ptr{cudnnConvolutionMode_t},
                                                           computeType::Ptr{cudnnDataType_t})::cudnnStatus_t
end

@checked function cudnnGetConvolution2dForwardOutputDim(convDesc, inputTensorDesc,
                                                        filterDesc, n, c, h, w)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetConvolution2dForwardOutputDim(convDesc::cudnnConvolutionDescriptor_t,
                                                                 inputTensorDesc::cudnnTensorDescriptor_t,
                                                                 filterDesc::cudnnFilterDescriptor_t,
                                                                 n::Ptr{Cint}, c::Ptr{Cint},
                                                                 h::Ptr{Cint},
                                                                 w::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnGetConvolutionNdForwardOutputDim(convDesc, inputTensorDesc,
                                                        filterDesc, nbDims, tensorOuputDimA)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetConvolutionNdForwardOutputDim(convDesc::cudnnConvolutionDescriptor_t,
                                                                 inputTensorDesc::cudnnTensorDescriptor_t,
                                                                 filterDesc::cudnnFilterDescriptor_t,
                                                                 nbDims::Cint,
                                                                 tensorOuputDimA::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnGetConvolutionForwardAlgorithmMaxCount(handle, count)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetConvolutionForwardAlgorithmMaxCount(handle::cudnnHandle_t,
                                                                       count::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnGetConvolutionForwardAlgorithm_v7(handle, srcDesc, filterDesc,
                                                         convDesc, destDesc,
                                                         requestedAlgoCount,
                                                         returnedAlgoCount, perfResults)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetConvolutionForwardAlgorithm_v7(handle::cudnnHandle_t,
                                                                  srcDesc::cudnnTensorDescriptor_t,
                                                                  filterDesc::cudnnFilterDescriptor_t,
                                                                  convDesc::cudnnConvolutionDescriptor_t,
                                                                  destDesc::cudnnTensorDescriptor_t,
                                                                  requestedAlgoCount::Cint,
                                                                  returnedAlgoCount::Ptr{Cint},
                                                                  perfResults::Ptr{cudnnConvolutionFwdAlgoPerf_t})::cudnnStatus_t
end

@checked function cudnnFindConvolutionForwardAlgorithm(handle, xDesc, wDesc, convDesc,
                                                       yDesc, requestedAlgoCount,
                                                       returnedAlgoCount, perfResults)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnFindConvolutionForwardAlgorithm(handle::cudnnHandle_t,
                                                                xDesc::cudnnTensorDescriptor_t,
                                                                wDesc::cudnnFilterDescriptor_t,
                                                                convDesc::cudnnConvolutionDescriptor_t,
                                                                yDesc::cudnnTensorDescriptor_t,
                                                                requestedAlgoCount::Cint,
                                                                returnedAlgoCount::Ptr{Cint},
                                                                perfResults::Ptr{cudnnConvolutionFwdAlgoPerf_t})::cudnnStatus_t
end

@checked function cudnnFindConvolutionForwardAlgorithmEx(handle, xDesc, x, wDesc, w,
                                                         convDesc, yDesc, y,
                                                         requestedAlgoCount,
                                                         returnedAlgoCount, perfResults,
                                                         workSpace, workSpaceSizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnFindConvolutionForwardAlgorithmEx(handle::cudnnHandle_t,
                                                                  xDesc::cudnnTensorDescriptor_t,
                                                                  x::CuPtr{Cvoid},
                                                                  wDesc::cudnnFilterDescriptor_t,
                                                                  w::CuPtr{Cvoid},
                                                                  convDesc::cudnnConvolutionDescriptor_t,
                                                                  yDesc::cudnnTensorDescriptor_t,
                                                                  y::CuPtr{Cvoid},
                                                                  requestedAlgoCount::Cint,
                                                                  returnedAlgoCount::Ptr{Cint},
                                                                  perfResults::Ptr{cudnnConvolutionFwdAlgoPerf_t},
                                                                  workSpace::CuPtr{Cvoid},
                                                                  workSpaceSizeInBytes::Csize_t)::cudnnStatus_t
end

@checked function cudnnIm2Col(handle, xDesc, x, wDesc, convDesc, colBuffer)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnIm2Col(handle::cudnnHandle_t,
                                       xDesc::cudnnTensorDescriptor_t, x::CuPtr{Cvoid},
                                       wDesc::cudnnFilterDescriptor_t,
                                       convDesc::cudnnConvolutionDescriptor_t,
                                       colBuffer::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnReorderFilterAndBias(handle, filterDesc, reorderType, filterData,
                                            reorderedFilterData, reorderBias, biasData,
                                            reorderedBiasData)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnReorderFilterAndBias(handle::cudnnHandle_t,
                                                     filterDesc::cudnnFilterDescriptor_t,
                                                     reorderType::cudnnReorderType_t,
                                                     filterData::CuPtr{Cvoid},
                                                     reorderedFilterData::CuPtr{Cvoid},
                                                     reorderBias::Cint,
                                                     biasData::CuPtr{Cvoid},
                                                     reorderedBiasData::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnGetConvolutionForwardWorkspaceSize(handle, xDesc, wDesc, convDesc,
                                                          yDesc, algo, sizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetConvolutionForwardWorkspaceSize(handle::cudnnHandle_t,
                                                                   xDesc::cudnnTensorDescriptor_t,
                                                                   wDesc::cudnnFilterDescriptor_t,
                                                                   convDesc::cudnnConvolutionDescriptor_t,
                                                                   yDesc::cudnnTensorDescriptor_t,
                                                                   algo::cudnnConvolutionFwdAlgo_t,
                                                                   sizeInBytes::Ref{Csize_t})::cudnnStatus_t
end

@checked function cudnnConvolutionForward(handle, alpha, xDesc, x, wDesc, w, convDesc, algo,
                                          workSpace, workSpaceSizeInBytes, beta, yDesc, y)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnConvolutionForward(handle::cudnnHandle_t, alpha::Ptr{Cvoid},
                                                   xDesc::cudnnTensorDescriptor_t,
                                                   x::CuPtr{Cvoid},
                                                   wDesc::cudnnFilterDescriptor_t,
                                                   w::CuPtr{Cvoid},
                                                   convDesc::cudnnConvolutionDescriptor_t,
                                                   algo::cudnnConvolutionFwdAlgo_t,
                                                   workSpace::CuPtr{Cvoid},
                                                   workSpaceSizeInBytes::Csize_t,
                                                   beta::Ptr{Cvoid},
                                                   yDesc::cudnnTensorDescriptor_t,
                                                   y::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnConvolutionBiasActivationForward(handle, alpha1, xDesc, x, wDesc, w,
                                                        convDesc, algo, workSpace,
                                                        workSpaceSizeInBytes, alpha2, zDesc,
                                                        z, biasDesc, bias, activationDesc,
                                                        yDesc, y)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnConvolutionBiasActivationForward(handle::cudnnHandle_t,
                                                                 alpha1::Ptr{Cvoid},
                                                                 xDesc::cudnnTensorDescriptor_t,
                                                                 x::CuPtr{Cvoid},
                                                                 wDesc::cudnnFilterDescriptor_t,
                                                                 w::CuPtr{Cvoid},
                                                                 convDesc::cudnnConvolutionDescriptor_t,
                                                                 algo::cudnnConvolutionFwdAlgo_t,
                                                                 workSpace::CuPtr{Cvoid},
                                                                 workSpaceSizeInBytes::Csize_t,
                                                                 alpha2::Ptr{Cvoid},
                                                                 zDesc::cudnnTensorDescriptor_t,
                                                                 z::CuPtr{Cvoid},
                                                                 biasDesc::cudnnTensorDescriptor_t,
                                                                 bias::CuPtr{Cvoid},
                                                                 activationDesc::cudnnActivationDescriptor_t,
                                                                 yDesc::cudnnTensorDescriptor_t,
                                                                 y::CuPtr{Cvoid})::cudnnStatus_t
end

struct cudnnConvolutionBwdDataAlgoPerfStruct
    algo::cudnnConvolutionBwdDataAlgo_t
    status::cudnnStatus_t
    time::Cfloat
    memory::Csize_t
    determinism::cudnnDeterminism_t
    mathType::cudnnMathType_t
    reserved::NTuple{3,Cint}
end

const cudnnConvolutionBwdDataAlgoPerf_t = cudnnConvolutionBwdDataAlgoPerfStruct

@checked function cudnnGetConvolutionBackwardDataAlgorithmMaxCount(handle, count)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetConvolutionBackwardDataAlgorithmMaxCount(handle::cudnnHandle_t,
                                                                            count::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnFindConvolutionBackwardDataAlgorithm(handle, wDesc, dyDesc, convDesc,
                                                            dxDesc, requestedAlgoCount,
                                                            returnedAlgoCount, perfResults)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnFindConvolutionBackwardDataAlgorithm(handle::cudnnHandle_t,
                                                                     wDesc::cudnnFilterDescriptor_t,
                                                                     dyDesc::cudnnTensorDescriptor_t,
                                                                     convDesc::cudnnConvolutionDescriptor_t,
                                                                     dxDesc::cudnnTensorDescriptor_t,
                                                                     requestedAlgoCount::Cint,
                                                                     returnedAlgoCount::Ptr{Cint},
                                                                     perfResults::Ptr{cudnnConvolutionBwdDataAlgoPerf_t})::cudnnStatus_t
end

@checked function cudnnFindConvolutionBackwardDataAlgorithmEx(handle, wDesc, w, dyDesc, dy,
                                                              convDesc, dxDesc, dx,
                                                              requestedAlgoCount,
                                                              returnedAlgoCount,
                                                              perfResults, workSpace,
                                                              workSpaceSizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnFindConvolutionBackwardDataAlgorithmEx(handle::cudnnHandle_t,
                                                                       wDesc::cudnnFilterDescriptor_t,
                                                                       w::CuPtr{Cvoid},
                                                                       dyDesc::cudnnTensorDescriptor_t,
                                                                       dy::CuPtr{Cvoid},
                                                                       convDesc::cudnnConvolutionDescriptor_t,
                                                                       dxDesc::cudnnTensorDescriptor_t,
                                                                       dx::CuPtr{Cvoid},
                                                                       requestedAlgoCount::Cint,
                                                                       returnedAlgoCount::Ptr{Cint},
                                                                       perfResults::Ptr{cudnnConvolutionBwdDataAlgoPerf_t},
                                                                       workSpace::CuPtr{Cvoid},
                                                                       workSpaceSizeInBytes::Csize_t)::cudnnStatus_t
end

@checked function cudnnGetConvolutionBackwardDataAlgorithm_v7(handle, filterDesc, diffDesc,
                                                              convDesc, gradDesc,
                                                              requestedAlgoCount,
                                                              returnedAlgoCount,
                                                              perfResults)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetConvolutionBackwardDataAlgorithm_v7(handle::cudnnHandle_t,
                                                                       filterDesc::cudnnFilterDescriptor_t,
                                                                       diffDesc::cudnnTensorDescriptor_t,
                                                                       convDesc::cudnnConvolutionDescriptor_t,
                                                                       gradDesc::cudnnTensorDescriptor_t,
                                                                       requestedAlgoCount::Cint,
                                                                       returnedAlgoCount::Ptr{Cint},
                                                                       perfResults::Ptr{cudnnConvolutionBwdDataAlgoPerf_t})::cudnnStatus_t
end

@checked function cudnnGetConvolutionBackwardDataWorkspaceSize(handle, wDesc, dyDesc,
                                                               convDesc, dxDesc, algo,
                                                               sizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetConvolutionBackwardDataWorkspaceSize(handle::cudnnHandle_t,
                                                                        wDesc::cudnnFilterDescriptor_t,
                                                                        dyDesc::cudnnTensorDescriptor_t,
                                                                        convDesc::cudnnConvolutionDescriptor_t,
                                                                        dxDesc::cudnnTensorDescriptor_t,
                                                                        algo::cudnnConvolutionBwdDataAlgo_t,
                                                                        sizeInBytes::Ref{Csize_t})::cudnnStatus_t
end

@checked function cudnnConvolutionBackwardData(handle, alpha, wDesc, w, dyDesc, dy,
                                               convDesc, algo, workSpace,
                                               workSpaceSizeInBytes, beta, dxDesc, dx)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnConvolutionBackwardData(handle::cudnnHandle_t,
                                                        alpha::Ptr{Cvoid},
                                                        wDesc::cudnnFilterDescriptor_t,
                                                        w::CuPtr{Cvoid},
                                                        dyDesc::cudnnTensorDescriptor_t,
                                                        dy::CuPtr{Cvoid},
                                                        convDesc::cudnnConvolutionDescriptor_t,
                                                        algo::cudnnConvolutionBwdDataAlgo_t,
                                                        workSpace::CuPtr{Cvoid},
                                                        workSpaceSizeInBytes::Csize_t,
                                                        beta::Ptr{Cvoid},
                                                        dxDesc::cudnnTensorDescriptor_t,
                                                        dx::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnGetFoldedConvBackwardDataDescriptors(handle, filterDesc, diffDesc,
                                                            convDesc, gradDesc,
                                                            transformFormat,
                                                            foldedFilterDesc,
                                                            paddedDiffDesc, foldedConvDesc,
                                                            foldedGradDesc,
                                                            filterFoldTransDesc,
                                                            diffPadTransDesc,
                                                            gradFoldTransDesc,
                                                            gradUnfoldTransDesc)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetFoldedConvBackwardDataDescriptors(handle::cudnnHandle_t,
                                                                     filterDesc::cudnnFilterDescriptor_t,
                                                                     diffDesc::cudnnTensorDescriptor_t,
                                                                     convDesc::cudnnConvolutionDescriptor_t,
                                                                     gradDesc::cudnnTensorDescriptor_t,
                                                                     transformFormat::cudnnTensorFormat_t,
                                                                     foldedFilterDesc::cudnnFilterDescriptor_t,
                                                                     paddedDiffDesc::cudnnTensorDescriptor_t,
                                                                     foldedConvDesc::cudnnConvolutionDescriptor_t,
                                                                     foldedGradDesc::cudnnTensorDescriptor_t,
                                                                     filterFoldTransDesc::cudnnTensorTransformDescriptor_t,
                                                                     diffPadTransDesc::cudnnTensorTransformDescriptor_t,
                                                                     gradFoldTransDesc::cudnnTensorTransformDescriptor_t,
                                                                     gradUnfoldTransDesc::cudnnTensorTransformDescriptor_t)::cudnnStatus_t
end

mutable struct cudnnFusedOpsConstParamStruct end

const cudnnFusedOpsConstParamPack_t = Ptr{cudnnFusedOpsConstParamStruct}

mutable struct cudnnFusedOpsVariantParamStruct end

const cudnnFusedOpsVariantParamPack_t = Ptr{cudnnFusedOpsVariantParamStruct}

mutable struct cudnnFusedOpsPlanStruct end

const cudnnFusedOpsPlan_t = Ptr{cudnnFusedOpsPlanStruct}

@cenum cudnnFusedOps_t::UInt32 begin
    CUDNN_FUSED_SCALE_BIAS_ACTIVATION_CONV_BNSTATS = 0
    CUDNN_FUSED_SCALE_BIAS_ACTIVATION_WGRAD = 1
    CUDNN_FUSED_BN_FINALIZE_STATISTICS_TRAINING = 2
    CUDNN_FUSED_BN_FINALIZE_STATISTICS_INFERENCE = 3
    CUDNN_FUSED_CONV_SCALE_BIAS_ADD_ACTIVATION = 4
    CUDNN_FUSED_SCALE_BIAS_ADD_ACTIVATION_GEN_BITMASK = 5
    CUDNN_FUSED_DACTIVATION_FORK_DBATCHNORM = 6
end

@cenum cudnnFusedOpsConstParamLabel_t::UInt32 begin
    CUDNN_PARAM_XDESC = 0
    CUDNN_PARAM_XDATA_PLACEHOLDER = 1
    CUDNN_PARAM_BN_MODE = 2
    CUDNN_PARAM_BN_EQSCALEBIAS_DESC = 3
    CUDNN_PARAM_BN_EQSCALE_PLACEHOLDER = 4
    CUDNN_PARAM_BN_EQBIAS_PLACEHOLDER = 5
    CUDNN_PARAM_ACTIVATION_DESC = 6
    CUDNN_PARAM_CONV_DESC = 7
    CUDNN_PARAM_WDESC = 8
    CUDNN_PARAM_WDATA_PLACEHOLDER = 9
    CUDNN_PARAM_DWDESC = 10
    CUDNN_PARAM_DWDATA_PLACEHOLDER = 11
    CUDNN_PARAM_YDESC = 12
    CUDNN_PARAM_YDATA_PLACEHOLDER = 13
    CUDNN_PARAM_DYDESC = 14
    CUDNN_PARAM_DYDATA_PLACEHOLDER = 15
    CUDNN_PARAM_YSTATS_DESC = 16
    CUDNN_PARAM_YSUM_PLACEHOLDER = 17
    CUDNN_PARAM_YSQSUM_PLACEHOLDER = 18
    CUDNN_PARAM_BN_SCALEBIAS_MEANVAR_DESC = 19
    CUDNN_PARAM_BN_SCALE_PLACEHOLDER = 20
    CUDNN_PARAM_BN_BIAS_PLACEHOLDER = 21
    CUDNN_PARAM_BN_SAVED_MEAN_PLACEHOLDER = 22
    CUDNN_PARAM_BN_SAVED_INVSTD_PLACEHOLDER = 23
    CUDNN_PARAM_BN_RUNNING_MEAN_PLACEHOLDER = 24
    CUDNN_PARAM_BN_RUNNING_VAR_PLACEHOLDER = 25
    CUDNN_PARAM_ZDESC = 26
    CUDNN_PARAM_ZDATA_PLACEHOLDER = 27
    CUDNN_PARAM_BN_Z_EQSCALEBIAS_DESC = 28
    CUDNN_PARAM_BN_Z_EQSCALE_PLACEHOLDER = 29
    CUDNN_PARAM_BN_Z_EQBIAS_PLACEHOLDER = 30
    CUDNN_PARAM_ACTIVATION_BITMASK_DESC = 31
    CUDNN_PARAM_ACTIVATION_BITMASK_PLACEHOLDER = 32
    CUDNN_PARAM_DXDESC = 33
    CUDNN_PARAM_DXDATA_PLACEHOLDER = 34
    CUDNN_PARAM_DZDESC = 35
    CUDNN_PARAM_DZDATA_PLACEHOLDER = 36
    CUDNN_PARAM_BN_DSCALE_PLACEHOLDER = 37
    CUDNN_PARAM_BN_DBIAS_PLACEHOLDER = 38
end

@cenum cudnnFusedOpsPointerPlaceHolder_t::UInt32 begin
    CUDNN_PTR_NULL = 0
    CUDNN_PTR_ELEM_ALIGNED = 1
    CUDNN_PTR_16B_ALIGNED = 2
end

@cenum cudnnFusedOpsVariantParamLabel_t::UInt32 begin
    CUDNN_PTR_XDATA = 0
    CUDNN_PTR_BN_EQSCALE = 1
    CUDNN_PTR_BN_EQBIAS = 2
    CUDNN_PTR_WDATA = 3
    CUDNN_PTR_DWDATA = 4
    CUDNN_PTR_YDATA = 5
    CUDNN_PTR_DYDATA = 6
    CUDNN_PTR_YSUM = 7
    CUDNN_PTR_YSQSUM = 8
    CUDNN_PTR_WORKSPACE = 9
    CUDNN_PTR_BN_SCALE = 10
    CUDNN_PTR_BN_BIAS = 11
    CUDNN_PTR_BN_SAVED_MEAN = 12
    CUDNN_PTR_BN_SAVED_INVSTD = 13
    CUDNN_PTR_BN_RUNNING_MEAN = 14
    CUDNN_PTR_BN_RUNNING_VAR = 15
    CUDNN_PTR_ZDATA = 16
    CUDNN_PTR_BN_Z_EQSCALE = 17
    CUDNN_PTR_BN_Z_EQBIAS = 18
    CUDNN_PTR_ACTIVATION_BITMASK = 19
    CUDNN_PTR_DXDATA = 20
    CUDNN_PTR_DZDATA = 21
    CUDNN_PTR_BN_DSCALE = 22
    CUDNN_PTR_BN_DBIAS = 23
    CUDNN_SCALAR_SIZE_T_WORKSPACE_SIZE_IN_BYTES = 100
    CUDNN_SCALAR_INT64_T_BN_ACCUMULATION_COUNT = 101
    CUDNN_SCALAR_DOUBLE_BN_EXP_AVG_FACTOR = 102
    CUDNN_SCALAR_DOUBLE_BN_EPSILON = 103
end

@checked function cudnnCnnVersionCheck()
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCnnVersionCheck()::cudnnStatus_t
end

struct cudnnConvolutionBwdFilterAlgoPerfStruct
    algo::cudnnConvolutionBwdFilterAlgo_t
    status::cudnnStatus_t
    time::Cfloat
    memory::Csize_t
    determinism::cudnnDeterminism_t
    mathType::cudnnMathType_t
    reserved::NTuple{3,Cint}
end

const cudnnConvolutionBwdFilterAlgoPerf_t = cudnnConvolutionBwdFilterAlgoPerfStruct

@checked function cudnnGetConvolutionBackwardFilterAlgorithmMaxCount(handle, count)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetConvolutionBackwardFilterAlgorithmMaxCount(handle::cudnnHandle_t,
                                                                              count::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnFindConvolutionBackwardFilterAlgorithm(handle, xDesc, dyDesc,
                                                              convDesc, dwDesc,
                                                              requestedAlgoCount,
                                                              returnedAlgoCount,
                                                              perfResults)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnFindConvolutionBackwardFilterAlgorithm(handle::cudnnHandle_t,
                                                                       xDesc::cudnnTensorDescriptor_t,
                                                                       dyDesc::cudnnTensorDescriptor_t,
                                                                       convDesc::cudnnConvolutionDescriptor_t,
                                                                       dwDesc::cudnnFilterDescriptor_t,
                                                                       requestedAlgoCount::Cint,
                                                                       returnedAlgoCount::Ptr{Cint},
                                                                       perfResults::Ptr{cudnnConvolutionBwdFilterAlgoPerf_t})::cudnnStatus_t
end

@checked function cudnnFindConvolutionBackwardFilterAlgorithmEx(handle, xDesc, x, dyDesc, y,
                                                                convDesc, dwDesc, dw,
                                                                requestedAlgoCount,
                                                                returnedAlgoCount,
                                                                perfResults, workSpace,
                                                                workSpaceSizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnFindConvolutionBackwardFilterAlgorithmEx(handle::cudnnHandle_t,
                                                                         xDesc::cudnnTensorDescriptor_t,
                                                                         x::CuPtr{Cvoid},
                                                                         dyDesc::cudnnTensorDescriptor_t,
                                                                         y::CuPtr{Cvoid},
                                                                         convDesc::cudnnConvolutionDescriptor_t,
                                                                         dwDesc::cudnnFilterDescriptor_t,
                                                                         dw::CuPtr{Cvoid},
                                                                         requestedAlgoCount::Cint,
                                                                         returnedAlgoCount::Ptr{Cint},
                                                                         perfResults::Ptr{cudnnConvolutionBwdFilterAlgoPerf_t},
                                                                         workSpace::CuPtr{Cvoid},
                                                                         workSpaceSizeInBytes::Csize_t)::cudnnStatus_t
end

@checked function cudnnGetConvolutionBackwardFilterAlgorithm_v7(handle, srcDesc, diffDesc,
                                                                convDesc, gradDesc,
                                                                requestedAlgoCount,
                                                                returnedAlgoCount,
                                                                perfResults)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetConvolutionBackwardFilterAlgorithm_v7(handle::cudnnHandle_t,
                                                                         srcDesc::cudnnTensorDescriptor_t,
                                                                         diffDesc::cudnnTensorDescriptor_t,
                                                                         convDesc::cudnnConvolutionDescriptor_t,
                                                                         gradDesc::cudnnFilterDescriptor_t,
                                                                         requestedAlgoCount::Cint,
                                                                         returnedAlgoCount::Ptr{Cint},
                                                                         perfResults::Ptr{cudnnConvolutionBwdFilterAlgoPerf_t})::cudnnStatus_t
end

@checked function cudnnGetConvolutionBackwardFilterWorkspaceSize(handle, xDesc, dyDesc,
                                                                 convDesc, gradDesc, algo,
                                                                 sizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetConvolutionBackwardFilterWorkspaceSize(handle::cudnnHandle_t,
                                                                          xDesc::cudnnTensorDescriptor_t,
                                                                          dyDesc::cudnnTensorDescriptor_t,
                                                                          convDesc::cudnnConvolutionDescriptor_t,
                                                                          gradDesc::cudnnFilterDescriptor_t,
                                                                          algo::cudnnConvolutionBwdFilterAlgo_t,
                                                                          sizeInBytes::Ref{Csize_t})::cudnnStatus_t
end

@checked function cudnnConvolutionBackwardFilter(handle, alpha, xDesc, x, dyDesc, dy,
                                                 convDesc, algo, workSpace,
                                                 workSpaceSizeInBytes, beta, dwDesc, dw)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnConvolutionBackwardFilter(handle::cudnnHandle_t,
                                                          alpha::Ptr{Cvoid},
                                                          xDesc::cudnnTensorDescriptor_t,
                                                          x::CuPtr{Cvoid},
                                                          dyDesc::cudnnTensorDescriptor_t,
                                                          dy::CuPtr{Cvoid},
                                                          convDesc::cudnnConvolutionDescriptor_t,
                                                          algo::cudnnConvolutionBwdFilterAlgo_t,
                                                          workSpace::CuPtr{Cvoid},
                                                          workSpaceSizeInBytes::Csize_t,
                                                          beta::Ptr{Cvoid},
                                                          dwDesc::cudnnFilterDescriptor_t,
                                                          dw::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnConvolutionBackwardBias(handle, alpha, dyDesc, dy, beta, dbDesc, db)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnConvolutionBackwardBias(handle::cudnnHandle_t,
                                                        alpha::Ptr{Cvoid},
                                                        dyDesc::cudnnTensorDescriptor_t,
                                                        dy::CuPtr{Cvoid}, beta::Ptr{Cvoid},
                                                        dbDesc::cudnnTensorDescriptor_t,
                                                        db::CuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnCreateFusedOpsConstParamPack(constPack, ops)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateFusedOpsConstParamPack(constPack::Ptr{cudnnFusedOpsConstParamPack_t},
                                                             ops::cudnnFusedOps_t)::cudnnStatus_t
end

@checked function cudnnDestroyFusedOpsConstParamPack(constPack)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyFusedOpsConstParamPack(constPack::cudnnFusedOpsConstParamPack_t)::cudnnStatus_t
end

@checked function cudnnSetFusedOpsConstParamPackAttribute(constPack, paramLabel, param)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetFusedOpsConstParamPackAttribute(constPack::cudnnFusedOpsConstParamPack_t,
                                                                   paramLabel::cudnnFusedOpsConstParamLabel_t,
                                                                   param::Ptr{Cvoid})::cudnnStatus_t
end

@checked function cudnnGetFusedOpsConstParamPackAttribute(constPack, paramLabel, param,
                                                          isNULL)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetFusedOpsConstParamPackAttribute(constPack::cudnnFusedOpsConstParamPack_t,
                                                                   paramLabel::cudnnFusedOpsConstParamLabel_t,
                                                                   param::Ptr{Cvoid},
                                                                   isNULL::Ptr{Cint})::cudnnStatus_t
end

@checked function cudnnCreateFusedOpsVariantParamPack(varPack, ops)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateFusedOpsVariantParamPack(varPack::Ptr{cudnnFusedOpsVariantParamPack_t},
                                                               ops::cudnnFusedOps_t)::cudnnStatus_t
end

@checked function cudnnDestroyFusedOpsVariantParamPack(varPack)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyFusedOpsVariantParamPack(varPack::cudnnFusedOpsVariantParamPack_t)::cudnnStatus_t
end

@checked function cudnnSetFusedOpsVariantParamPackAttribute(varPack, paramLabel, ptr)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnSetFusedOpsVariantParamPackAttribute(varPack::cudnnFusedOpsVariantParamPack_t,
                                                                     paramLabel::cudnnFusedOpsVariantParamLabel_t,
                                                                     ptr::PtrOrCuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnGetFusedOpsVariantParamPackAttribute(varPack, paramLabel, ptr)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnGetFusedOpsVariantParamPackAttribute(varPack::cudnnFusedOpsVariantParamPack_t,
                                                                     paramLabel::cudnnFusedOpsVariantParamLabel_t,
                                                                     ptr::PtrOrCuPtr{Cvoid})::cudnnStatus_t
end

@checked function cudnnCreateFusedOpsPlan(plan, ops)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnCreateFusedOpsPlan(plan::Ptr{cudnnFusedOpsPlan_t},
                                                   ops::cudnnFusedOps_t)::cudnnStatus_t
end

@checked function cudnnDestroyFusedOpsPlan(plan)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnDestroyFusedOpsPlan(plan::cudnnFusedOpsPlan_t)::cudnnStatus_t
end

@checked function cudnnMakeFusedOpsPlan(handle, plan, constPack, workspaceSizeInBytes)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnMakeFusedOpsPlan(handle::cudnnHandle_t,
                                                 plan::cudnnFusedOpsPlan_t,
                                                 constPack::cudnnFusedOpsConstParamPack_t,
                                                 workspaceSizeInBytes::Ptr{Csize_t})::cudnnStatus_t
end

@checked function cudnnFusedOpsExecute(handle, plan, varPack)
    initialize_context()
    @gcsafe_ccall libcudnn.cudnnFusedOpsExecute(handle::cudnnHandle_t,
                                                plan::cudnnFusedOpsPlan_t,
                                                varPack::cudnnFusedOpsVariantParamPack_t)::cudnnStatus_t
end

const CUDNN_MAX_SM_MAJOR_NUMBER = 9

const CUDNN_MAX_SM_MINOR_NUMBER = 0

const CUDNN_DIM_MAX = 8

const CUDNN_LRN_MIN_N = 1

const CUDNN_LRN_MAX_N = 16

const CUDNN_LRN_MIN_K = 1.0e-5

const CUDNN_LRN_MIN_BETA = 0.01

const CUDNN_BN_MIN_EPSILON = 0.0

const CUDNN_RNN_PADDED_IO_DISABLED = 0

const CUDNN_RNN_PADDED_IO_ENABLED = Cuint(1) << 0

const CUDNN_SEQDATA_DIM_COUNT = 4

const CUDNN_ATTN_QUERYMAP_ALL_TO_ONE = 0

const CUDNN_ATTN_QUERYMAP_ONE_TO_ONE = Cuint(1) << 0

const CUDNN_ATTN_DISABLE_PROJ_BIASES = 0

const CUDNN_ATTN_ENABLE_PROJ_BIASES = Cuint(1) << 1

const CUDNN_ATTN_WKIND_COUNT = 8
